[{"id":"content:0.index.md","path":"/","dir":"","title":"Home","description":"","keywords":[],"body":"     Hakuna Matata.   I am a dedicated learner, and together with my friend, we have formed a team called Code Sense in Kaohsiung. We engage in research and study on a weekly basis, with a passion for learning new technologies and skills.Continual learning is the driving force of my life.     8-9 years of software development and maintenance experience  3-4 years of experience in automation domain development  1-2 years of experience in department software training and management  Familiar with integration and connection of various factory systems (  MES ,   WMS ,   PLC )  Proficient in web system front-end and back-end development and database design  Well-versed in measurement instrument and motor PC Base control (  RS232 ,   ModBusTCP ,   EtherCAT )      My Personal Moments.      Reading Blog   Regular Reading and Public Journal of Thoughts and Moods.[  Medium ]    Code Sense Trello   Regular Study and Discussion Sessions with Friends.\n[  Code Sense Trello ]    Slider   My Presentation Slides.[  Slider Link ]    Technical Documentation   Regular document writing and temporary storage.[  Hackmd ]"},{"id":"content:1.api:1.components.md","path":"/api/components","dir":"api","title":"Components","description":"Discover every component you can use in your content.","keywords":["<Alert />","<Badge />","<BlockHero />","<ButtonLink />","<Callout />","<Card />","<CardGrid />","<CodeGroup />","<CodeBlock />","<CopyButton />","<Icon />","<List />","<Sandbox />","<Terminal />","<VideoPlayer />"],"body":"  Components  Discover every component you can use in your content.   <Alert />     Check out an   info  alert with   code  and a   link .   Check out a   success  alert with   code  and a   link .   Check out a   warning  alert with   code  and a   link .   Check out a   danger  alert with   code  and a   link .     ::  alert  {type  =  \"info\"  }\n   Check out an   **info**   alert with   `code`   and a [  link  ](/).\n   ::\n     ::  alert  {type  =  \"success\"  }\n   Check out a   **success**   alert with   `code`   and a [  link  ](/).\n   ::\n     ::  alert  {type  =  \"warning\"  }\n   Check out a   **warning**   alert with   `code`   and a [  link  ](/).\n   ::\n     ::  alert  {type  =  \"danger\"  }\n   Check out a   **danger**   alert with   `code`   and a [  link  ](/).\n   ::     <Badge />   <Badge />  support same types as   <Alert /> .     v1.2  Deprecated   Not found!     :  badge  [  v1.2  ]\n     :  badge  [  Deprecated  ]{  type  =  \"warning\"  }\n     ::  badge  {type  =  \"danger\"  }\n   Not found!\n   ::     <BlockHero />      Document-driven framework   Docus reconciles content creators and developers by offering to both the best tools to create and scale content-based websites.     ::  block-hero\n   ---\n   cta  :\n     -   Get started\n     -   /get-started\n   secondary  :\n     -   Open on GitHub →\n     -   https://github.com/nuxtlabs/docus\n   snippet  :   npx nuxi@latest init docus-app -t nuxtlabs/docus-starter\n   ---\n   #title\n   Document-driven framework\n     #description\n   Docus reconciles content creators and developers by offering to both the best tools to create and scale content-based websites.\n   ::     <ButtonLink />    Play on StackBlitz     :  button-link  [  Play on StackBlitz  ]{  icon  =  \"IconStackBlitz\"     href  =  \"https://stackblitz.com/github/nuxtlabs/docus-starter\"     blank  }     <Callout />   <Callout />  support same types as   <Alert /> .      This is a callout! Click me to open.   This is the content of the callout.    This is a callout! Click me to open.   This is the content of the callout.     ::  callout\n   #summary\n   This is a callout! Click me to open.\n     #content\n   This is the content of the callout.\n   ::\n    \n   ::  callout  {type  =  \"warning\"  }\n   #summary\n   This is a callout! Click me to open.\n     #content\n   This is the content of the callout.\n   ::     <Card />      Nuxt Architecture.   Based on   Nuxt 3  and   Nuxt Content .   \nUse Nuxt to build a static site, or a serverless app.      ::  card  {icon  =  \"logos:nuxt-icon\"  }\n      #title\n    Nuxt Architecture.\n      #description\n    Based on   **Nuxt 3**   and   **Nuxt Content**  . :  br\n    Use Nuxt to build a static site, or a serverless app.\n    ::     <CardGrid />      What's included?      Nuxt Architecture.   Harness the full power of Nuxt and the Nuxt ecosystem.    Vue Components.   Use built-in components (or your own!) inside your content.    Write Markdown.   Enjoy the ease and simplicity of Markdown and discover MDC syntax.     ::  card-grid\n   #title\n   What's included\n     #root\n   :  ellipsis\n     #default\n     ::  card\n       #title\n     Nuxt Architecture.\n       #description\n     Harness the full power of Nuxt and the Nuxt ecosystem.\n     ::\n     ::  card\n       #title\n     Vue Components.\n       #description\n     Use built-in components (or your own!) inside your content.\n     ::\n     ::  card\n       #title\n     Write Markdown.\n       #description\n     Enjoy the ease and simplicity of Markdown and discover MDC syntax.\n     ::\n   ::     <CodeGroup />  This component uses   slots  to create a tab panel of your code examples or preview.        yarn     add     docus     npm     install     docus     ::  code-group\n     ```bash [  Yarn  ]\n     yarn add docus\n     ```\n     ```bash [  NPM  ]\n     npm install docus\n     ```\n   ::     <CodeBlock />  To be used inside a   <CodeGroup />  component to display a preview of some rendered code.     Hello World!     /* Added as a child of   `<CodeGroup />`   */\n     ::  code-block  {label  =  \"Preview\"     preview}\n     ::  badge\n     Hello World!\n     ::\n   ::     <CopyButton />        :  copy-button  {content=\"hey!\"}     <Icon />  Icon component gives you access to all   100,000+  icons from   icones.js.org .          :  icon  {name=\"logos:nuxt-icon\"}\n   :  icon  {name=\"logos:vue\"}\n   :  icon  {name=\"logos:nuxt-icon\"}     <List />       Important  Always    Amazing  Congrats    Do you know?  You can also do this    Be careful  Use with precautions    Drinking too much  Driving drunk     ::  list  {type  =  \"primary\"  }\n   -     **Important**\n   -   Always\n   ::\n     ::  list  {type  =  \"success\"  }\n   -   Amazing\n   -   Congrats\n   ::\n     ::  list  {type  =  \"info\"  }\n   -   Do you know?\n   -   You can also do this\n   ::\n     ::  list  {type  =  \"warning\"  }\n   -   Be careful\n   -   Use with precautions\n   ::\n     ::  list  {type  =  \"danger\"  }\n   -   Drinking too much\n   -   Driving drunk\n   ::    <Sandbox />  Embed CodeSandbox/StackBlitz easily in your documentation with great performances.  Using the   IntersectionObserver  to load when visible in the viewport.        :  sandbox  {src=\"https://codesandbox.io/embed/nuxt-content-l164h?hidenavigation=1&theme=dark\"}     <Terminal />        :  terminal  {content=\"nuxi build\"}     <VideoPlayer />         ::  div\n     :  video-player  {src=\"https://www.youtube.com/watch?v=o9e12WbKrd8\"}\n   ::   .github-light_github-dark{color:#24292e;background:#fff;}.dark .github-light_github-dark{color:#e1e4e8;background:#24292e;}.ct-553616{color:#24292E;}.dark .ct-553616{color:#E1E4E8;}.ct-914029{color:#22863A;}.dark .ct-914029{color:#85E89D;}.ct-762058{color:#6F42C1;}.dark .ct-762058{color:#B392F0;}.ct-952708{color:#032F62;}.dark .ct-952708{color:#9ECBFF;}.ct-611988{color:#24292E;font-weight:bold;}.dark .ct-611988{color:#E1E4E8;font-weight:bold;}.ct-617022{color:#005CC5;}.dark .ct-617022{color:#79B8FF;}.ct-789106{color:#032F62;text-decoration:bold;}.dark .ct-789106{color:#DBEDFF;text-decoration:bold;}.ct-157101{color:#E36209;}.dark .ct-157101{color:#FFAB70;}"},{"id":"content:1.api:2.composables.md","path":"/api/composables","dir":"api","title":"Composables","description":"Discover the Docus composables to use in your custom Vue components and pages.","keywords":["useDocus()","useMenu()","useScrollspy()"],"body":"  Composables  Discover the Docus composables to use in your custom Vue components and pages.   useDocus()   useDocus()  gives access to docus runtime config, all default values and your custom config from   app.config.ts    config  refers to the merged config of the current page.   main ,   header ,   aside ,   footer  and   titleTemplate  can be set from   _dir.yml  and any   page.md  file.  The configs in   app.config  file will be used as defaults.     <  script     setup  >\n   const   {   config   }   =     useDocus  ()\n   </  script  >\n     <  template  >\n     <  div  >\n       <  h1  >{{ config.title }}</  h1  >\n       <  p  >{{ config.description }}</  p  >\n     </  div  >\n   </  template  >    tree  refers to the current navigation tree that is displayed in the   aside  component.     <  script     setup  >\n   const   {   tree   }   =     useDocus  ()\n   </  script  >\n     <  template  >\n     <  DocsAsideTree     :links  =  \"tree\"   />\n   </  template  >    useMenu()   useMenu()  gives access to   $menu  plugin controlling mobile navigation globally.     const   {\n       // Is menu visible\n       visible  ,\n       // Close menu function\n       close  ,\n       // Open menu function\n       open  ,\n       // Toggle menu function\n       toggle\n   }   =     useMenu  ()    useScrollspy()   useScrollspy()  is used in   docs  layout to make the ToC display the currently visible headings.     const   {\n       // Headings on the page\n       visibleHeadings  ,\n       // Active headings (for the current page)\n       activeHeadings  ,\n       // Update headings (an array of DOM nodes)\n       updateHeadings\n   }   =     useScrollspy  ()   .github-light_github-dark{color:#24292e;background:#fff;}.dark .github-light_github-dark{color:#e1e4e8;background:#24292e;}.ct-553616{color:#24292E;}.dark .ct-553616{color:#E1E4E8;}.ct-914029{color:#22863A;}.dark .ct-914029{color:#85E89D;}.ct-762058{color:#6F42C1;}.dark .ct-762058{color:#B392F0;}.ct-149352{color:#D73A49;}.dark .ct-149352{color:#F97583;}.ct-617022{color:#005CC5;}.dark .ct-617022{color:#79B8FF;}.ct-028869{color:#B31D28;font-style:italic;}.dark .ct-028869{color:#FDAEB7;font-style:italic;}.ct-952708{color:#032F62;}.dark .ct-952708{color:#9ECBFF;}.ct-086898{color:#6A737D;}"},{"id":"content:1.api:3.layouts.md","path":"/api/layouts","dir":"api","title":"Layouts","description":"Docus provides multiple built-in layouts for displaying your Markdown pages.","keywords":["default","page"],"body":"  Layouts  Docus provides multiple built-in layouts for displaying your Markdown pages.   default  The default layout for every page created in the project. This layout renders multiple section alongside the content:   Aside navigation menu (togglable with   aside: false/true )  Page bottom section (togglable with   bottom: false/true )  Table of content (togglable with   toc: false/true )     ---\n   aside  :   true\n   bottom  :   true\n   toc  :   false\n   ---\n     Your awesome content  Current page is live sample of default layout.   page   page  layout is content focused layout. This layout does not render aside menu of table of contents.  This layout accept some configuration from content front-matter.    fluid : By setting   fluid: true  in content front-matter the content will be rendered in full width.   constrainedClass : Using this option you can modify layout container look. Like constraining layout width of changing the background.   padded : Setting   padded: true  in front-matter will add horizontal padding in the layout.     ---\n   title  :   Home\n   layout  :   page\n   fluid  :   true\n   ---  Check   Home page  as live sample of page layout  .github-light_github-dark{color:#24292e;background:#fff;}.dark .github-light_github-dark{color:#e1e4e8;background:#24292e;}.ct-553616{color:#24292E;}.dark .ct-553616{color:#E1E4E8;}.ct-914029{color:#22863A;}.dark .ct-914029{color:#85E89D;}.ct-617022{color:#005CC5;}.dark .ct-617022{color:#79B8FF;}.ct-952708{color:#032F62;}.dark .ct-952708{color:#9ECBFF;}"},{"id":"content:2.desktop:1.WindowsForm找不到類型xxxx上的建構涵式.md","path":"/desktop/windowsformxxxx","dir":"desktop","title":"WindowsForm找不到類型xxxx上的建構涵式","description":"","keywords":["情境","錯誤訊息","解決方法"],"body":"  WindowsForm找不到類型xxxx上的建構涵式  情境  近期在設計DeskTop頁面時有遇到幾個頁面基底邏輯相同的狀況，於是特別設置Base Page去讓UC繼承使用。因為頁面其實長差不多，所以最後決定不使用參考引用而直接使用繼承。  讓A(UC_3Dswitch_CalibrationFileManagement)繼承B(UC_3Dswitch_FileManagementBase)。  錯誤訊息  編譯上都沒有問題，但此時再使用Design模式時，發生找不到類型錯誤如下    解決方法    宣告無注入空的建構子，       // 宣告無注入空的建構子\n   public     UC_3Dswitch_FileManagementBase  ()\n   {\n     }\n   public     UC_3Dswitch_FileManagementBase  (  AppSetting     appSetting  ) \n   {\n       ProductLineDataPath   =   appSetting.ProductLineDataPath;\n       SNFolderNameLength   =   appSetting.SNFolderNameLength;\n         InitializeComponent  ();\n   }  因原先Base設定注入所宣告AppSetting物件，故發生上述無法載入錯誤。看起來Deisnger模式在Control物件使用上Defaul都是預設空的建構子設置。  .github-light_github-dark{color:#24292e;background:#fff;}.dark .github-light_github-dark{color:#e1e4e8;background:#24292e;}.ct-086898{color:#6A737D;}.ct-149352{color:#D73A49;}.dark .ct-149352{color:#F97583;}.ct-553616{color:#24292E;}.dark .ct-553616{color:#E1E4E8;}.ct-762058{color:#6F42C1;}.dark .ct-762058{color:#B392F0;}"},{"id":"content:3.database:1.MSSQL使用指令測試Server硬碟速度小技巧.md","path":"/database/mssqlserver","dir":"database","title":"MSSQL使用指令測試Server硬碟速度小技巧","description":"","keywords":["讀取速度","寫入速度"],"body":"  MSSQL使用指令測試Server硬碟速度小技巧  讀取速度  選抽一個資料庫 下BACKUP DATABASE指令，備分資料庫不做寫入，只做讀取，可得到讀取速度值。     BACKUP     DATABASE   [FUXIN_CPL]   TO     DISK     =  'NULL'     WITH     COPY_ONLY    下圖可看到結果每秒讀取速度為180MB/sec    寫入速度     BACKUP     DATABASE   [FUXIN_CPL]   TO     DISK     =  'C:\\TEST.BAK'     WITH     COPY_ONLY  此時會得到讀寫時間為每秒153MB    每秒153MB為讀寫時間，此時須作運算處裡將寫入時間算出  讀取總頁數共688頁，一頁8k => 688*8.0 / 1024 = 5.375M  寫入時間為 0.035-0.03 = 0.005  5.375M/0.005 = 1075M  .github-light_github-dark{color:#24292e;background:#fff;}.dark .github-light_github-dark{color:#e1e4e8;background:#24292e;}.ct-149352{color:#D73A49;}.dark .ct-149352{color:#F97583;}.ct-553616{color:#24292E;}.dark .ct-553616{color:#E1E4E8;}.ct-952708{color:#032F62;}.dark .ct-952708{color:#9ECBFF;}"}]