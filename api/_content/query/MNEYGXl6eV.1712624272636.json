[{"_path":"/code/fp(functional-programming)-(currying-closure-)","_dir":"code","_draft":false,"_partial":false,"_locale":"","title":"FP(Functional programming)簡易釐清 (含Currying 與 Closure 理解)","description":"","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"fpfunctional-programming簡易釐清-含currying-與-closure-理解"},"children":[{"type":"text","value":"FP(Functional programming)簡易釐清 (含Currying 與 Closure 理解)"}]},{"type":"element","tag":"h6","props":{"id":"tags-code-sense-design-pattern"},"children":[{"type":"text","value":"tags: "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Code Sense"}]},{"type":"text","value":" "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Design-Pattern"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"前幾天在看Youtube講"},{"type":"element","tag":"a","props":{"href":"https://www.youtube.com/watch?v=5lY7caTLyXA&lc=Ugwm-V71T7Ah3fVPSt14AaABAg&ab_channel=%E8%B5%B0%E6%AD%AA%E7%9A%84%E5%B7%A5%E7%A8%8B%E5%B8%ABJames","rel":["nofollow"]},"children":[{"type":"text","value":"Currying"}]},{"type":"text","value":"時，看到留言處有人回關於在FP的世界closure觀念有很重要。於是好奇看了一下兩者的差異，對於OOP派的自己，已經很久沒寫FP設計了，有的話也是在很多年前對於軟工還處於碼農對OO完全不會時期的自己。特別寫一篇記錄Currying與Closure的認知紀錄，記錄過程順便釐清OOP與FP差異之處。"}]},{"type":"element","tag":"h2","props":{"id":"oop與fp在純數據處理應用場景差異"},"children":[{"type":"text","value":"OOP與FP在純數據處理應用場景差異"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"OOP在物件、設計模式面去設計實際架構非常好用，但在FP世界哩，感覺大多是用於處裡數據面的應用，大多會以API形式去呈現。對於一開始的認知是這樣，針對這部分做一個研讀"}]},{"type":"element","tag":"h3","props":{"id":"數學和科學計算"},"children":[{"type":"text","value":"數學和科學計算"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"FP稍微查文獻，理念和概念來源於一種稱為 λ 演算（Lambda Calculus）的數學邏輯系統。在λ演算中，所有東西都是函數，並且只有一種操作，那就是應用（apply）。這種簡單、統一的架構與數學中函數的概念有很強的關聯，並且有助於構建簡潔、可預測和易於推理的程序。"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"純粹性：數學中，函數的值僅取決於它的輸入，並不取決於任何外部狀態。這與λ演算中函數的概念相一致，也是函數式編程中\"純函數\"的概念的基礎。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"函數的一等性：數學中，函數可以作為輸入給其他函數，也可以作為其他函數的輸出。這與λ演算中函數的概念相一致，並且是函數式編程中\"函數作為一等公民\"的概念的基礎。"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"所以，可以說FP在設計之初就深受數學的影響。然而，這並不意味著函數式編程只適合於數學問題。事實上，函數式編程的概念，如"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"不可變性"}]},{"type":"text","value":"、"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"純函數"}]},{"type":"text","value":"和"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"函數組合"}]},{"type":"text","value":"，在許多不同的應用情境和領域中都是有用的。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"對於OOP較熟看到此的人大致會有點小感覺，會覺得對於這些特性的應用，其實OOP概念上也是可實現的。但在於數據需要進行大量並行處理和異步操作的場景中，FP的不可變性和狀態無關性可以帶來很大的優勢。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"另外更簡單數據應用差異的例子如下，假設我們有一個任務，需要對一個數據集（比如一個數字列表）中的每個元素都進行平方運算。在一種物件導向的實現方式中，我們可能會創建一個數據集類別（DataSet），並為該類別提供一個方法來進行平方運算："}]},{"type":"element","tag":"pre","props":{"className":"language-python github-light_github-dark","code":"class DataSet:\n    def __init__(self, data):\n        self.data = data\n\n    def square(self):\n        for i in range(len(self.data)):\n            self.data[i] = self.data[i] ** 2\n","language":"python","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"class"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-762058"},"children":[{"type":"text","value":"DataSet"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":":\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"    "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"def"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-617022"},"children":[{"type":"text","value":"__init__"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"(self, data):\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"        "}]},{"type":"element","tag":"span","props":{"class":"ct-617022"},"children":[{"type":"text","value":"self"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":".data "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" data\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":4},"children":[{"type":"element","tag":"span","props":{},"children":[]}]},{"type":"element","tag":"span","props":{"class":"line","line":5},"children":[{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"    "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"def"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-762058"},"children":[{"type":"text","value":"square"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"(self):\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":6},"children":[{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"        "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"for"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" i "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"in"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-617022"},"children":[{"type":"text","value":"range"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-617022"},"children":[{"type":"text","value":"len"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-617022"},"children":[{"type":"text","value":"self"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":".data)):\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":7},"children":[{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"            "}]},{"type":"element","tag":"span","props":{"class":"ct-617022"},"children":[{"type":"text","value":"self"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":".data[i] "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-617022"},"children":[{"type":"text","value":"self"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":".data[i] "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"**"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-617022"},"children":[{"type":"text","value":"2"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Context如下"}]},{"type":"element","tag":"pre","props":{"className":"language-python github-light_github-dark","code":"data = DataSet([1, 2, 3, 4, 5])\ndata.square()\nprint(data.data)  # Outputs: [1, 4, 9, 16, 25]\n","language":"python","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"data "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" DataSet(["}]},{"type":"element","tag":"span","props":{"class":"ct-617022"},"children":[{"type":"text","value":"1"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":", "}]},{"type":"element","tag":"span","props":{"class":"ct-617022"},"children":[{"type":"text","value":"2"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":", "}]},{"type":"element","tag":"span","props":{"class":"ct-617022"},"children":[{"type":"text","value":"3"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":", "}]},{"type":"element","tag":"span","props":{"class":"ct-617022"},"children":[{"type":"text","value":"4"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":", "}]},{"type":"element","tag":"span","props":{"class":"ct-617022"},"children":[{"type":"text","value":"5"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"])\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"data.square()\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{"class":"ct-617022"},"children":[{"type":"text","value":"print"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"(data.data)  "}]},{"type":"element","tag":"span","props":{"class":"ct-086898"},"children":[{"type":"text","value":"# Outputs: [1, 4, 9, 16, 25]"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"這種實現方式的問題在於，每當我們需要對數據進行新的操作時（比如開根號，取對數等），我們都需要在 DataSet 類別中添加一個新的方法。如果操作的種類很多，這樣會使得 DataSet 類別變得非常臃腫。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在FP設計中，我們將這些操作抽象為函數，並且可以很容易地將這些函數應用到數據集中的每一個元素如下"}]},{"type":"element","tag":"pre","props":{"className":"language-python github-light_github-dark","code":"def square(x):\n    return x ** 2\n\ndata = [1, 2, 3, 4, 5]\ndata = list(map(square, data))\n\nprint(data)  # Outputs: [1, 4, 9, 16, 25]\n","language":"python","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"def"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-762058"},"children":[{"type":"text","value":"square"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"(x):\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"    "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"return"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" x "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"**"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-617022"},"children":[{"type":"text","value":"2\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{},"children":[]}]},{"type":"element","tag":"span","props":{"class":"line","line":4},"children":[{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"data "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" ["}]},{"type":"element","tag":"span","props":{"class":"ct-617022"},"children":[{"type":"text","value":"1"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":", "}]},{"type":"element","tag":"span","props":{"class":"ct-617022"},"children":[{"type":"text","value":"2"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":", "}]},{"type":"element","tag":"span","props":{"class":"ct-617022"},"children":[{"type":"text","value":"3"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":", "}]},{"type":"element","tag":"span","props":{"class":"ct-617022"},"children":[{"type":"text","value":"4"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":", "}]},{"type":"element","tag":"span","props":{"class":"ct-617022"},"children":[{"type":"text","value":"5"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"]\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":5},"children":[{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"data "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-617022"},"children":[{"type":"text","value":"list"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-617022"},"children":[{"type":"text","value":"map"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"(square, data))\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":6},"children":[{"type":"element","tag":"span","props":{},"children":[]}]},{"type":"element","tag":"span","props":{"class":"line","line":7},"children":[{"type":"element","tag":"span","props":{"class":"ct-617022"},"children":[{"type":"text","value":"print"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"(data)  "}]},{"type":"element","tag":"span","props":{"class":"ct-086898"},"children":[{"type":"text","value":"# Outputs: [1, 4, 9, 16, 25]"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在這種情況下，當我們需要添加新的操作時，只需添加一個新的函數即可，無需修改數據結構。而且，這些函數可以重用於任何類型的數據集，而不僅僅是我們定義的 DataSet 類別。因此，對於這種需要對大量數據進行同樣操作的情境，函數式程式設計的風格通常能提供更高的靈活性和可重用性。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"其實也許這時針對這例子你可能會思考，這例子有點爛，誰會針對這應用情境去設計物件。沒錯，你的觀察非常準確! FP傾向於表達計算過程為數學函數的求值，更多的關注在數據操作和轉換上，而不是像物件導向程式設計那樣，重視封裝資料和行為到物件中，並使用物件的互動來描述計算過程。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"這並不是說 FP 不適合處理需要物件設計的場景，而是它們解決問題的角度和方法有所不同。事實上，在很多現代的語言中，FP 和 OOP 都被視為是語言的重要組成部分，並且在很多場景中可以一起使用。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"以上述的例子，如果在一個更複雜的系統中，這些數據被封裝在物件中，並且物件有自己的行為和狀態，那麼使用 OOP 可能會更合適。但是，當我們需要處理大量數據，並且對這些數據進行各種轉換和處理時，FP 提供的 map, reduce, filter 等高階函數可以讓我們更直接地描述這些操作。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"講到此，應該對於數學和科學計算的應用場景FP與OOP的差異性就會有較清楚的認知。"}]},{"type":"element","tag":"h3","props":{"id":"大數據處理和分析"},"children":[{"type":"text","value":"大數據處理和分析"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"FP與不可變數據結構的結合，在大數據處理和分析的應用中非常有效。比如，Apache Spark就是一個使用Scala（一種支持FP的語言）編寫的大數據處理框架，並利用了許多FP的概念，如不可變數據集和高階函數。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"接著具體來談談 Apache Spark 以及函數式編程在大數據處理中的應用"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Apache Spark 是一個用於大規模數據處理的開源集群運算系統，提供了一個非常高級的（抽象層次高的）數據操作接口，稱為 Resilient Distributed Dataset（RDD）。RDD是一種不可變的、分布式的、元素類型相同的數據集合。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在 Spark 中，RDD 是主要的數據結構，所有的操作（如 map, filter, reduce 等）都是在 RDD 上進行的。由於 RDD 是不可變的，所以一旦創建就不能被修改，這使得 Spark 能夠在大規模並行計算中有效地追蹤數據的來源和變化。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"以下是一個用 Spark 的 Python API (pyspark) 進行簡單 map-reduce 操作的例子："}]},{"type":"element","tag":"pre","props":{"className":"language-python github-light_github-dark","code":"from pyspark import SparkContext\n\nsc = SparkContext(\"local\", \"count app\")\nnums = sc.parallelize([1, 2, 3, 4, 5])\n\n# 使用 map 操作將所有數字加一\nadd_one = nums.map(lambda x: x + 1)\n\n# 使用 reduce 操作將所有數字相加\nsum = add_one.reduce(lambda a, b: a + b)\n\nprint(sum)  # 輸出： 20\n\n","language":"python","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"from"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" pyspark "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"import"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" SparkContext\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{},"children":[]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"sc "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" SparkContext("}]},{"type":"element","tag":"span","props":{"class":"ct-952708"},"children":[{"type":"text","value":"\"local\""}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":", "}]},{"type":"element","tag":"span","props":{"class":"ct-952708"},"children":[{"type":"text","value":"\"count app\""}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":")\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":4},"children":[{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"nums "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" sc.parallelize(["}]},{"type":"element","tag":"span","props":{"class":"ct-617022"},"children":[{"type":"text","value":"1"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":", "}]},{"type":"element","tag":"span","props":{"class":"ct-617022"},"children":[{"type":"text","value":"2"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":", "}]},{"type":"element","tag":"span","props":{"class":"ct-617022"},"children":[{"type":"text","value":"3"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":", "}]},{"type":"element","tag":"span","props":{"class":"ct-617022"},"children":[{"type":"text","value":"4"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":", "}]},{"type":"element","tag":"span","props":{"class":"ct-617022"},"children":[{"type":"text","value":"5"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"])\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":5},"children":[{"type":"element","tag":"span","props":{},"children":[]}]},{"type":"element","tag":"span","props":{"class":"line","line":6},"children":[{"type":"element","tag":"span","props":{"class":"ct-086898"},"children":[{"type":"text","value":"# 使用 map 操作將所有數字加一\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":7},"children":[{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"add_one "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" nums.map("}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"lambda"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" x: x "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"+"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-617022"},"children":[{"type":"text","value":"1"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":")\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":8},"children":[{"type":"element","tag":"span","props":{},"children":[]}]},{"type":"element","tag":"span","props":{"class":"line","line":9},"children":[{"type":"element","tag":"span","props":{"class":"ct-086898"},"children":[{"type":"text","value":"# 使用 reduce 操作將所有數字相加\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":10},"children":[{"type":"element","tag":"span","props":{"class":"ct-617022"},"children":[{"type":"text","value":"sum"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" add_one.reduce("}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"lambda"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" a, b: a "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"+"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" b)\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":11},"children":[{"type":"element","tag":"span","props":{},"children":[]}]},{"type":"element","tag":"span","props":{"class":"line","line":12},"children":[{"type":"element","tag":"span","props":{"class":"ct-617022"},"children":[{"type":"text","value":"print"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-617022"},"children":[{"type":"text","value":"sum"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":")  "}]},{"type":"element","tag":"span","props":{"class":"ct-086898"},"children":[{"type":"text","value":"# 輸出： 20"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"這個例子中，首先創建了一個 RDD（nums），然後使用 map 操作將 RDD 中的每個數字加一，接著使用 reduce 操作將所有數字相加。這些操作都是以函數的形式（lambda 函數）進行的，並且可以自動地在多個節點上並行執行。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"這就是函數式編程在大數據處理中的一個應用例子。通過使用不可變數據結構（RDD）和高階函數（map, reduce 等），Spark 可以將大規模數據處理問題抽象化，並提供一種有效、簡潔和可伸縮的解決方案。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"如果這例子太難，在舉一個更簡單的例子來理解FP在大數據處理中的優勢。假設需要處理一個包含數百萬條記錄的數據集，每條記錄都是一個人的個人信息（例如，名字，年齡，地址等）。任務是找出年齡在 18 歲以上的所有人。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在物件導向的方法中，可能會像這樣來處理："}]},{"type":"element","tag":"pre","props":{"className":"language-python github-light_github-dark","code":"\nclass Person:\n    def __init__(self, name, age, address):\n        self.name = name\n        self.age = age\n        self.address = address\n\npeople = [...]  # 假設這是一個包含數百萬個 Person 物件的列表\n\nadults = []\nfor person in people:\n    if person.age >= 18:\n        adults.append(person)\n\n","language":"python","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{},"children":[]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"class"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-762058"},"children":[{"type":"text","value":"Person"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":":\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"    "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"def"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-617022"},"children":[{"type":"text","value":"__init__"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"(self, name, age, address):\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":4},"children":[{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"        "}]},{"type":"element","tag":"span","props":{"class":"ct-617022"},"children":[{"type":"text","value":"self"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":".name "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" name\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":5},"children":[{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"        "}]},{"type":"element","tag":"span","props":{"class":"ct-617022"},"children":[{"type":"text","value":"self"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":".age "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" age\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":6},"children":[{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"        "}]},{"type":"element","tag":"span","props":{"class":"ct-617022"},"children":[{"type":"text","value":"self"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":".address "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" address\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":7},"children":[{"type":"element","tag":"span","props":{},"children":[]}]},{"type":"element","tag":"span","props":{"class":"line","line":8},"children":[{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"people "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" ["}]},{"type":"element","tag":"span","props":{"class":"ct-617022"},"children":[{"type":"text","value":"..."}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"]  "}]},{"type":"element","tag":"span","props":{"class":"ct-086898"},"children":[{"type":"text","value":"# 假設這是一個包含數百萬個 Person 物件的列表\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":9},"children":[{"type":"element","tag":"span","props":{},"children":[]}]},{"type":"element","tag":"span","props":{"class":"line","line":10},"children":[{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"adults "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" []\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":11},"children":[{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"for"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" person "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"in"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" people:\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":12},"children":[{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"    "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"if"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" person.age "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":">="}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-617022"},"children":[{"type":"text","value":"18"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":":\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":13},"children":[{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"        adults.append(person)"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"而在FP設計中，可以將這個任務抽象為一個過濾操作："}]},{"type":"element","tag":"pre","props":{"className":"language-python github-light_github-dark","code":"\npeople = [...]  # 假設這是一個包含數百萬個 tuples 的列表，每個 tuple 是一個人的信息\n\nadults = filter(lambda person: person[1] >= 18, people)\n\n","language":"python","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{},"children":[]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"people "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" ["}]},{"type":"element","tag":"span","props":{"class":"ct-617022"},"children":[{"type":"text","value":"..."}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"]  "}]},{"type":"element","tag":"span","props":{"class":"ct-086898"},"children":[{"type":"text","value":"# 假設這是一個包含數百萬個 tuples 的列表，每個 tuple 是一個人的信息\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{},"children":[]}]},{"type":"element","tag":"span","props":{"class":"line","line":4},"children":[{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"adults "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-617022"},"children":[{"type":"text","value":"filter"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"lambda"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" person: person["}]},{"type":"element","tag":"span","props":{"class":"ct-617022"},"children":[{"type":"text","value":"1"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"] "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":">="}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-617022"},"children":[{"type":"text","value":"18"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":", people)"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在這個例子中，使用了內建的 filter 函數和一個 lambda 函數來達成目標。這種方式更為簡短和直觀，並且可以自動地利用並行處理來加速計算（例如，如果使用的是像 PySpark 這樣的分布式計算框架）。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"講到此，再去觀察上述例子，FP設計具有狀態不變性、Pure Function(Output只取決於Input)，因此他非常適合拿來做數據的應用處理。但真實世界不可能完全靠Pure方法設計，光是撈資料庫顯示到前端操作部分就會牽扯到很多資料面的狀態(與數據面不一樣)的變化處裡。此時OOP就會是較好的選擇。"}]},{"type":"element","tag":"h2","props":{"id":"fp中的closure與currying"},"children":[{"type":"text","value":"FP中的Closure與Currying"}]},{"type":"element","tag":"h3","props":{"id":"理解closure"},"children":[{"type":"text","value":"理解Closure"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"雖然FP特性在於狀態不變性去設計，但有些數據操作流程還是會有數據狀態應用，此時就可以使用Closure較精簡進階的寫法去達成。Closure是一種特殊類型的函數，它可以訪問並操作在它被定義的時候已經存在的變數，即使這個函數在它的定義環境之外被調用。特別是在需要創建一個能夠記住某些特定狀態的函數時。在 Python 中，Closure可以讓一個函數「記住」它被定義時的環境。舉個例子如下"}]},{"type":"element","tag":"pre","props":{"className":"language-python github-light_github-dark","code":"def make_multiplier(x):\n    def multiplier(n):\n        return x * n\n    return multiplier\n\ntimes3 = make_multiplier(3)\nprint(times3(10))  # Outputs: 30\n\n","language":"python","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"def"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-762058"},"children":[{"type":"text","value":"make_multiplier"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"(x):\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"    "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"def"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-762058"},"children":[{"type":"text","value":"multiplier"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"(n):\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"        "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"return"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" x "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"*"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" n\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":4},"children":[{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"    "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"return"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" multiplier\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":5},"children":[{"type":"element","tag":"span","props":{},"children":[]}]},{"type":"element","tag":"span","props":{"class":"line","line":6},"children":[{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"times3 "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" make_multiplier("}]},{"type":"element","tag":"span","props":{"class":"ct-617022"},"children":[{"type":"text","value":"3"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":")\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":7},"children":[{"type":"element","tag":"span","props":{"class":"ct-617022"},"children":[{"type":"text","value":"print"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"(times3("}]},{"type":"element","tag":"span","props":{"class":"ct-617022"},"children":[{"type":"text","value":"10"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"))  "}]},{"type":"element","tag":"span","props":{"class":"ct-086898"},"children":[{"type":"text","value":"# Outputs: 30"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"這裡的 multiplier(n) 函數就是一個Closure。為何呢？因為它「記住」了當它被創建時所在的環境。當我們調用 make_multiplier(3) 時，我們實際上是在創建一個新的 multiplier(n) 函數，這個函數「知道」 x 是 3(狀態不再改變)，即使multiplier(n) 函數是在 make_multiplier(x) 函數的內部被定義的，當它被返回並指派給 times3 變數時，它實際上已經離開了 make_multiplier(x) 的「範疇」或「作用域」。換句話說，multiplier(n) 函數已經在 make_multiplier(x) 函數的外部被調用。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"這裡再加強補充multiplier(n) 函數已經在 make_multiplier(x) 函數的外部被調用這件事情。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在 Python 中，當你定義一個函數，這個函數會有它自己的作用域，也就是說它只能直接訪問在自己內部定義的變數。 make_multiplier(x) 函數裡，這個函數可以訪問變數 x，因為 x 是作為參數傳進來的。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"然後， make_multiplier(x) 函數裡面定義了一個新的函數 multiplier(n)。這個新函數可以訪問 n，因為 n 是作為參數傳進來的，但它也能訪問 x，即使 x 是在外部的 make_multiplier(x) 函數中定義的。這是因為 multiplier(n) 函數是在 make_multiplier(x) 函數的作用域內創建的，所以它能夠訪問 make_multiplier(x) 函數的作用域。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"然後將multiplier(n) 函數作為 make_multiplier(x) 函數的返回值，因此當調用 make_multiplier(3)，實際上獲得的是一個新的函數，這個新函數在被調用時會將傳入的值乘以3。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"當將 make_multiplier(3) 的返回值（即 multiplier(n) 函數）賦值給 times3 並調用 times3(10) 時，即使 multiplier(n) 函數現在已經在 make_multiplier(x) 函數的外部被調用，它仍然能夠「記住」 x 的值（在這裡是3）。當你調用 times3(10)（實際上就是調用 multiplier(10)）時，它知道要將10乘以3，因為它“記住”了 x 的值為3。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"這就是所謂的Closure：一個函數記住並能夠訪問其外部作用域的變數(上述例子的x)，即使它現在在其創建時的作用域之外被調用。"}]},{"type":"text","value":" 換句話說multiplier(n)記住了當它被創建時的環境，它依舊有能力記住並訪問它所在的外部函數的變數(make_multiplier(x))。"}]},{"type":"element","tag":"h3","props":{"id":"理解currying"},"children":[{"type":"text","value":"理解Currying"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"因為FP大多是做function的組合(無物件特性)，要讓程式碼比較自然且容易閱讀。此時我們就會談到Currying。它是一種將接收多個參數的函數轉換為一系列使用一個參數的函數的技術。例如，一個接收兩個參數的函數 f(x, y) 可以被 Curry 化為一個接收一個參數並返回一個函數的函數 g(x)(y)。在這種情況下，可以首先提供第一個參數（例如，g(2)），並得到一個新的函數，該函數接收第二個參數並返回最終結果（例如，g(2)(3) 返回與 f(2, 3) 相同的結果）。簡單來說Currying就是一種將接受多個參數的函數轉換為一系列使用一個參數的函數的技術。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"根據上述例子在Currying實現回如下"}]},{"type":"element","tag":"pre","props":{"className":"language-python github-light_github-dark","code":"def multiply(x):\n    def multiply_x(y):\n        return x * y\n    return multiply_x\n\ndouble = multiply(2)\nprint(double(5))  # Outputs: 10\n","language":"python","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"def"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-762058"},"children":[{"type":"text","value":"multiply"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"(x):\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"    "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"def"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-762058"},"children":[{"type":"text","value":"multiply_x"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"(y):\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"        "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"return"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" x "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"*"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" y\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":4},"children":[{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"    "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"return"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" multiply_x\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":5},"children":[{"type":"element","tag":"span","props":{},"children":[]}]},{"type":"element","tag":"span","props":{"class":"line","line":6},"children":[{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"double "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" multiply("}]},{"type":"element","tag":"span","props":{"class":"ct-617022"},"children":[{"type":"text","value":"2"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":")\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":7},"children":[{"type":"element","tag":"span","props":{"class":"ct-617022"},"children":[{"type":"text","value":"print"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"(double("}]},{"type":"element","tag":"span","props":{"class":"ct-617022"},"children":[{"type":"text","value":"5"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"))  "}]},{"type":"element","tag":"span","props":{"class":"ct-086898"},"children":[{"type":"text","value":"# Outputs: 10"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"將一個接受兩個參數的函數 multiply 轉化為一個函數 multiply_x，這個函數接受一個參數並且返回一個函數，這個返回的函數也接受一個參數。我們可以看到，這裡的 multiply_x 同時也是一個Closure，因為它記住了 x 的值。雖然這範例看起來與Closure很像，但其實應用場景上還是有些差異...請往下看~"}]},{"type":"element","tag":"h3","props":{"id":"currying與closure情境差異"},"children":[{"type":"text","value":"Currying與Closure情境差異"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"這邊做個小整理"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Closure：Closure的主要用途是「記住」來自外部函數的變數。當內部函數被返回並在其他地方使用時，即使原來的外部函數已經完成執行，這個內部函數仍然可以訪問和操作那些變數。這可以用來創造有狀態的函數，也就是說，這些函數的行為會被他們的「環境」影響。在上述例子中，multiplier(n) 就是一個Closure。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Currying：Currying的主要用途是將一個接收多個參數的函數轉化成一連串接收單一參數的函數。這可以使得我們能夠以更靈活的方式使用函數，尤其是在涉及函數作為參數的場合。在你的第二個例子中，multiply(x) 就進行了Currying的過程。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"假設我們在開發一款遊戲，並且我們想要計數玩家取得的分數。我們可以使用Closure來實現這個需求："}]},{"type":"element","tag":"pre","props":{"className":"language-python github-light_github-dark","code":"def create_score_counter():\n    score = 0\n    def add_score(points):\n        nonlocal score\n        score += points\n        return score\n    return add_score\n\ncounter = create_score_counter()\nprint(counter(10))  # Outputs: 10\nprint(counter(20))  # Outputs: 30\n","language":"python","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"def"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-762058"},"children":[{"type":"text","value":"create_score_counter"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"():\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"    score "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-617022"},"children":[{"type":"text","value":"0\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"    "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"def"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-762058"},"children":[{"type":"text","value":"add_score"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"(points):\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":4},"children":[{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"        "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"nonlocal"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" score\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":5},"children":[{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"        score "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"+="}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" points\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":6},"children":[{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"        "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"return"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" score\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":7},"children":[{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"    "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"return"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" add_score\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":8},"children":[{"type":"element","tag":"span","props":{},"children":[]}]},{"type":"element","tag":"span","props":{"class":"line","line":9},"children":[{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"counter "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" create_score_counter()\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":10},"children":[{"type":"element","tag":"span","props":{"class":"ct-617022"},"children":[{"type":"text","value":"print"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"(counter("}]},{"type":"element","tag":"span","props":{"class":"ct-617022"},"children":[{"type":"text","value":"10"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"))  "}]},{"type":"element","tag":"span","props":{"class":"ct-086898"},"children":[{"type":"text","value":"# Outputs: 10\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":11},"children":[{"type":"element","tag":"span","props":{"class":"ct-617022"},"children":[{"type":"text","value":"print"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"(counter("}]},{"type":"element","tag":"span","props":{"class":"ct-617022"},"children":[{"type":"text","value":"20"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"))  "}]},{"type":"element","tag":"span","props":{"class":"ct-086898"},"children":[{"type":"text","value":"# Outputs: 30"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"create_score_counter 函數返回一個add_score，這個Closure會記住並修改它的外部環境中的 score 變數。即使 create_score_counter 函數的執行已經結束，add_score 函數仍然可以訪問和修改 score 變數。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在此例子中，Closure是更直觀且更簡單的方法來達到需求。我們要記錄和更新一個「狀態」（score），並且這個狀態需要在函數被連續調用的過程中保留。Closure讓我們能夠將狀態（這裡是 score）與用來操作狀態的函數（這裡是 add_score）捆綁在一起，並且這個狀態會在連續的函數調用之間被「記住」。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"（Currying）主要用來將一個接收多個參數的函數轉換成一系列接收單一參數的函數。當我們需要讓一個函數的一部分參數（或預設參數）被「固定」，而另一部分參數在之後被提供時，Currying就很有用。然而在此例子中，我們主要的需求是「記錄和更新狀態」，而不僅僅是「固定一部分參數」。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"另一個情境，假設我們正在處理一個列表，我們想要對列表中的每個元素應用一個函數。我們可以使用Currying來創建一個函數，這個函數接收一個函數和一個列表作為參數，然後返回一個新的函數，這個新的函數接收一個元素並應用我們之前傳入的函數："}]},{"type":"element","tag":"pre","props":{"className":"language-python github-light_github-dark","code":"def map_function(func):\n    def apply_func_to_list(lst):\n        return [func(x) for x in lst]\n    return apply_func_to_list\n\ndouble = lambda x: x * 2\nmap_double = map_function(double)\n\nprint(map_double([1, 2, 3, 4, 5]))  # Outputs: [2, 4, 6, 8, 10]\n","language":"python","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"def"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-762058"},"children":[{"type":"text","value":"map_function"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"(func):\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"    "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"def"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-762058"},"children":[{"type":"text","value":"apply_func_to_list"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"(lst):\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"        "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"return"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" [func(x) "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"for"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" x "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"in"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" lst]\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":4},"children":[{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"    "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"return"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" apply_func_to_list\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":5},"children":[{"type":"element","tag":"span","props":{},"children":[]}]},{"type":"element","tag":"span","props":{"class":"line","line":6},"children":[{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"double "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"lambda"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" x: x "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"*"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-617022"},"children":[{"type":"text","value":"2\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":7},"children":[{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"map_double "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" map_function(double)\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":8},"children":[{"type":"element","tag":"span","props":{},"children":[]}]},{"type":"element","tag":"span","props":{"class":"line","line":9},"children":[{"type":"element","tag":"span","props":{"class":"ct-617022"},"children":[{"type":"text","value":"print"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"(map_double(["}]},{"type":"element","tag":"span","props":{"class":"ct-617022"},"children":[{"type":"text","value":"1"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":", "}]},{"type":"element","tag":"span","props":{"class":"ct-617022"},"children":[{"type":"text","value":"2"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":", "}]},{"type":"element","tag":"span","props":{"class":"ct-617022"},"children":[{"type":"text","value":"3"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":", "}]},{"type":"element","tag":"span","props":{"class":"ct-617022"},"children":[{"type":"text","value":"4"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":", "}]},{"type":"element","tag":"span","props":{"class":"ct-617022"},"children":[{"type":"text","value":"5"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"]))  "}]},{"type":"element","tag":"span","props":{"class":"ct-086898"},"children":[{"type":"text","value":"# Outputs: [2, 4, 6, 8, 10]"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"map_function 函數實際上就是在進行Currying：它接收一個函數作為參數，然後返回一個新的函數 apply_func_to_list。這個新的函數可以接收一個列表作為參數，並且對列表中的每個元素應用我們傳入 map_function 的那個函數。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"此例沒有需要維護和更新的\"狀態\"。這個例子中的 map_function 可以看作一個被Currying的函數：它首先接收一個函數 func，然後返回一個新的函數 apply_func_to_list，這個新的函數會接收一個列表 lst，並將 func 應用到 lst 的每個元素上。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"這種將函數的參數分階段接收的特性，使得你可以提前固定部分參數（在這裡就是固定了 func），並生成一個新的函數用於處理之後的參數（在這裡就是處理 lst）。這種特性在一些情況下可以使代碼更簡潔，更有彈性。而Closure則是針對狀態維護與更新的簡潔寫法。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"看完後"},{"type":"element","tag":"del","props":{},"children":[{"type":"text","value":"應該對於FP設計概念及Closure與Currying有較清楚的認知"}]},{"type":"text","value":"但實際還是要更具Context的親自下手設計才會更有感覺。"}]},{"type":"element","tag":"h2","props":{"id":"小記"},"children":[{"type":"text","value":"小記"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"其實Currying在C#也是可以用Delgate實現，如下"}]},{"type":"element","tag":"pre","props":{"className":"language-csharp github-light_github-dark","code":"public static void Main()\n{\n    Func<int, Func<int, int>> curriedMultiply = MultiplyCurried();\n    Func<int, int> multiplyBy2 = curriedMultiply(2);\n\n    int result = multiplyBy2(3); // result will be 6\n    Console.WriteLine(result);\n}\n\nstatic Func<int, Func<int, int>> MultiplyCurried()\n{\n    return a => b => a * b;\n}\n","language":"csharp","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"public"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"static"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"void"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-762058"},"children":[{"type":"text","value":"Main"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"()\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"{\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"    "}]},{"type":"element","tag":"span","props":{"class":"ct-762058"},"children":[{"type":"text","value":"Func"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"<"}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"int"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":", "}]},{"type":"element","tag":"span","props":{"class":"ct-762058"},"children":[{"type":"text","value":"Func"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"<"}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"int"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":", "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"int"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":">> "}]},{"type":"element","tag":"span","props":{"class":"ct-762058"},"children":[{"type":"text","value":"curriedMultiply"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-762058"},"children":[{"type":"text","value":"MultiplyCurried"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"();\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":4},"children":[{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"    "}]},{"type":"element","tag":"span","props":{"class":"ct-762058"},"children":[{"type":"text","value":"Func"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"<"}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"int"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":", "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"int"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"> "}]},{"type":"element","tag":"span","props":{"class":"ct-762058"},"children":[{"type":"text","value":"multiplyBy2"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-762058"},"children":[{"type":"text","value":"curriedMultiply"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-617022"},"children":[{"type":"text","value":"2"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":");\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":5},"children":[{"type":"element","tag":"span","props":{},"children":[]}]},{"type":"element","tag":"span","props":{"class":"line","line":6},"children":[{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"    "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"int"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-762058"},"children":[{"type":"text","value":"result"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-762058"},"children":[{"type":"text","value":"multiplyBy2"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-617022"},"children":[{"type":"text","value":"3"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"); "}]},{"type":"element","tag":"span","props":{"class":"ct-086898"},"children":[{"type":"text","value":"// result will be 6\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":7},"children":[{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"    Console."}]},{"type":"element","tag":"span","props":{"class":"ct-762058"},"children":[{"type":"text","value":"WriteLine"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"(result);\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":8},"children":[{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"}\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":9},"children":[{"type":"element","tag":"span","props":{},"children":[]}]},{"type":"element","tag":"span","props":{"class":"line","line":10},"children":[{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"static"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-762058"},"children":[{"type":"text","value":"Func"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"<"}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"int"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":", "}]},{"type":"element","tag":"span","props":{"class":"ct-762058"},"children":[{"type":"text","value":"Func"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"<"}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"int"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":", "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"int"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":">> "}]},{"type":"element","tag":"span","props":{"class":"ct-762058"},"children":[{"type":"text","value":"MultiplyCurried"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"()\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":11},"children":[{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"{\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":12},"children":[{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"    "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"return"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-762058"},"children":[{"type":"text","value":"a"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"=>"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-762058"},"children":[{"type":"text","value":"b"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"=>"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" a "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"*"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" b;\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":13},"children":[{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"}"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"雖說可以實現，但Delgate的設計主要用於事件處理、異步調用與回調函數場景，跟數據世界Closure的應用就不太相同。在數據分析和處理的領域，Closure的主要用途是「記住」來自外部函數的變數，並且在閉包函數內部操作這些變數。這特別適用於需要維護和更新內部狀態的情況。例如，在統計數據或者計數的時候，Closure可以使我們的代碼變得更簡潔，而且容易理解。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"而Delegate應用於通用的軟件設計領域，例如事件處理、異步調用和回調函數等場景。一個Delgate實際上就是一個包含有指向其他函數或方法的指針的對象。當一個Delgate被調用時，它可以調用它所引用的函數或方法。這可以動態地改變函數或方法的行為，並讓程式碼在執行時更加靈活。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"感覺自己可以在對FP做更完整的認知，每當聽到有人說分兩派信仰，我覺得應該是對於OOP與FP沒有完整的認知或是適當應用場景經驗的不足才會有偏差偏於用哪一種。"}]},{"type":"element","tag":"style","props":{},"children":[{"type":"text","value":".github-light_github-dark{color:#24292e;background:#fff;}.dark .github-light_github-dark{color:#e1e4e8;background:#24292e;}.ct-149352{color:#D73A49;}.dark .ct-149352{color:#F97583;}.ct-553616{color:#24292E;}.dark .ct-553616{color:#E1E4E8;}.ct-762058{color:#6F42C1;}.dark .ct-762058{color:#B392F0;}.ct-617022{color:#005CC5;}.dark .ct-617022{color:#79B8FF;}.ct-086898{color:#6A737D;}.ct-952708{color:#032F62;}.dark .ct-952708{color:#9ECBFF;}"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"oop與fp在純數據處理應用場景差異","depth":2,"text":"OOP與FP在純數據處理應用場景差異","children":[{"id":"數學和科學計算","depth":3,"text":"數學和科學計算"},{"id":"大數據處理和分析","depth":3,"text":"大數據處理和分析"}]},{"id":"fp中的closure與currying","depth":2,"text":"FP中的Closure與Currying","children":[{"id":"理解closure","depth":3,"text":"理解Closure"},{"id":"理解currying","depth":3,"text":"理解Currying"},{"id":"currying與closure情境差異","depth":3,"text":"Currying與Closure情境差異"}]},{"id":"小記","depth":2,"text":"小記"}]}},"_type":"markdown","_id":"content:0.code:6.FP(Functional programming)簡易釐清 (含Currying 與 Closure 理解).md","_source":"content","_file":"0.code/6.FP(Functional programming)簡易釐清 (含Currying 與 Closure 理解).md","_extension":"md"},{"_path":"/ironman-gcp/cloud","_dir":"ironman-gcp","_draft":false,"_partial":false,"_locale":"","title":"Cloud","description":"","body":{"type":"root","children":[],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:100.ironman-gcp:Cloud.md","_source":"content","_file":"100.ironman-gcp/Cloud.md","_extension":"md"}]