[{"_path":"/keycloak/oidcsaml","_dir":"keycloak","_draft":false,"_partial":false,"_locale":"","title":"OIDC vs SAML","description":"在這部分，我們將探討OIDC和SAML。正如前一章節所提，身分驗證和授權是整個安全流程中非常關鍵的環節。一般來說，會有專門的解決方案來處理這些問題。OIDC和SAML都是為這個目的而設計的標準協議，它們提供一個集中式的方法來驗證使用者身份，並界定他們可以訪問哪些資源或執行哪些操作。","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"oidc-vs-saml"},"children":[{"type":"text","value":"OIDC vs SAML"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在這部分，我們將探討OIDC和SAML。正如前一章節所提，身分驗證和授權是整個安全流程中非常關鍵的環節。一般來說，會有專門的解決方案來處理這些問題。OIDC和SAML都是為這個目的而設計的標準協議，它們提供一個集中式的方法來驗證使用者身份，並界定他們可以訪問哪些資源或執行哪些操作。"}]},{"type":"element","tag":"h3","props":{"id":"_1-open-id-connect-oidc"},"children":[{"type":"text","value":"1. Open ID Connect (OIDC)："}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"OIDC是一個建立在OAuth 2.0之上的身分認證層。OAuth 2.0本身是一個專注於授權的框架，而OIDC則在這個基礎上增加了身分驗證功能。這樣，應用程式不僅能知道使用者有哪些權限，還能瞭解使用者是誰，並獲取他們的基本資訊，比如名稱和電子郵件地址。"}]},{"type":"element","tag":"h4","props":{"id":"a-oauth-20"},"children":[{"type":"text","value":"a. OAuth 2.0"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"OAuth 2.0 是一個授權框架，允許第三方應用程式在使用者同意的情況下存取使用者在某個服務上的資訊，而不需要分享使用者的密碼。通常在OAuth 2.0，會有幾個角色，我們這邊舉一個簡單情境，你希望使用「快速日記」App，而這個App提供使用Google帳戶登入的功能來使用Google雲端硬碟服務。"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Resource Owner(資源擁有者) : 通常就是User(你)， 能授予應用程式取得受保護資料的人，通常就是終端使用者（end-user）。例如你希望使用「快速日記」App，而這個App提供使用Google帳戶登入的功能。在OAuth的流程中，當App請求許可存取你的資料時，你會給予（或拒絕）這個請求。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Resource Server(Resource Server) : 存放使用者受保護資料的伺服器，以這個例子來說就是Google雲端硬碟，當「快速日記」App希望保存或讀取日記時，它會向此伺服器提出請求。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Client (客戶端)：通常指稱想要取得受保護資源的「應用程式」，以這個例子來說就是「快速日記」App。 當「快速日記」App希望保存或讀取日記時，它會向此伺服器提出請求。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Authorization Server (授權伺服器) : 驗證 Resource Owner 的身份，並且在獲得同意之後，發放「Access Token」給應用程式（Client）的伺服器。以這個例子來說就是 (Google的授權伺服器)。"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"下圖整個驗證Flow"}]},{"type":"element","tag":"details","props":{},"children":[{"type":"text","value":"\n "},{"type":"element","tag":"summary","props":{},"children":[{"type":"text","value":"驗證Flow"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Client 到 Resource Owner :"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Request Credentials : 當你打開「快速日記」App並選擇使用Google帳戶登入時，App首先會引導你到Google的登入頁面。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Authenticate : 你將在Google的頁面上輸入你的Google帳戶憑證，即用戶名和密碼。這一步是由Google完成的，而「快速日記」App不會看到或知道你的密碼。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Consent : 一旦驗證成功，Google會顯示一個請求同意頁面。在這裡，Google會詢問你是否允許「快速日記」App訪問特定的Google帳戶資料。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Credentials : 「Resource Owner」（使用者）提供的身份資訊或某種用於辨識其身份的資料。這只是一個授權請求，而實際的身份驗證會在Resource Owner和Authorization Server之間完成。"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"ol","props":{"start":2},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Client 到 Authorization Server"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Authorization Request : 如果你同意上述的權限請求，「快速日記」App會從Google的授權伺服器請求一個授權碼。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Authorization Code : Google的授權伺服器會回傳一個短暫的授權碼給「快速日記」App。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Access Token : ，「快速日記」App會使用這個授權碼再次向Google的授權伺服器請求取得訪問令牌（Access Token）。"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"ol","props":{"start":3},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Client 到 Resource Server"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Access Token: 一旦取得訪問令牌，「快速日記」App便可以使用此令牌來存取Google雲端硬碟（或其他你同意的資料）。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Protected Resource: 當「快速日記」App希望保存或讀取日記時，它會使用這個Access Token向Google雲端硬碟（作為資源伺服器）提出請求，然後Google雲端硬碟會根據該令牌提供相對應的資料或服務。"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"更詳細的其實還有關係到Redirect部分，可以參照這篇 "},{"type":"element","tag":"a","props":{"href":"https://cloudsundial.com/salesforce-oauth-flows","rel":["nofollow"]},"children":[{"type":"text","value":"https://cloudsundial.com/salesforce-oauth-flows"}]},{"type":"text","value":" 寫得還算詳細。"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"OAuth 2.0 Flow","src":"/blog/images/04/02/001.png"},"children":[]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"_1-open-id-connect-oidc","depth":3,"text":"1. Open ID Connect (OIDC)："}]}},"_type":"markdown","_id":"content:5.keycloak:2.OIDC與SAML.md","_source":"content","_file":"5.keycloak/2.OIDC與SAML.md","_extension":"md"},{"_path":"/keycloak/keycloak","_dir":"keycloak","_draft":false,"_partial":false,"_locale":"","title":"Keycloak介紹","description":"我們剛才談到實現SSO（單一登入）的功能，那麼現在問題來了：有沒有一個工具或平台能讓我們更方便地實現這一切呢？答案是有的，那就是Keycloak。Keycloak是一個集成了多種身份驗證和授權機制（包括OIDC和SAML）的開源身份和訪問管理解決方案。","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"keycloak介紹"},"children":[{"type":"text","value":"Keycloak介紹"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"我們剛才談到實現SSO（單一登入）的功能，那麼現在問題來了：有沒有一個工具或平台能讓我們更方便地實現這一切呢？答案是有的，那就是Keycloak。Keycloak是一個集成了多種身份驗證和授權機制（包括OIDC和SAML）的開源身份和訪問管理解決方案。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Keycloak的特點如下"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"多協議支持: Keycloak支持OIDC和SAML，所以你不必為了不同的應用而選擇不同的解決方案。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"易於管理: Keycloak有一個使用者友善的管理界面，你可以輕鬆設定用戶、角色和權限。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"靈活性: 它是開源的，意味著你可以根據自己的需要對它進行定制。"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"詳細提供以下功能"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"身分驗證(Authentication)"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"單點登入/登出（Single Sign-On/Single Sign-Out）: 讓使用者只需登入一次，就能訪問多個不同的應用和服務。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"多因素認證（Multi-Factor Authentication, MFA）: 除了密碼外，還可以透過SMS、郵件或其他方法進行身份驗證。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"支持外部身分源: AD，LDAP，Social Login(Google, FB...)。"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"使用者管理（User Management）"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"使用者身分 CRUD（Create, Read, Update, Delete）: 簡單地管理使用者資訊，包括建立、查詢、更新和刪除。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"屬性管理（Attribute Management）: 可以給使用者賬戶添加多種屬性和標籤。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"使用者分組（User Grouping）: 組織使用者到不同的群組以方便管理。"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"授權（Authorization）"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Role-Based Access Control(RBA）: 基於角色給予使用者不同的訪問權限。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Attribute-Based Access Control(ABAC）: 根據使用者的特定屬性（如年齡、部門等）來給予權限。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"User-based Access Control (UBAC) : 直接對個別用戶賦予權限，而不是通過角色或屬性。這在只有少數用戶需要訪問特定資源的情況下特別有用。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Context-based Access Control (CBAC) : 更動態的授權方式，考慮到目前的情境或環境狀況（如目前正在執行的操作，或者資源的當前狀態）來做出授權決策。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Rule-based Access Control (Using JavaScript) : 使用 JavaScript 程式碼來定義特定的授權規則。這是一個非常靈活的方式，可以根據極其特定的需求來制定授權策略。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Time-based Access Control : 依據時間來決定是否允許訪問，例如只有工作時間允許訪問某個資源。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Support for custom Access Control Mechanism (ACMs) through a Service Provider Interface (SPI) : 高度定制的選項，允許你通過 Service Provider Interface (SPI) 來實現自己的授權機制。這對於需要非常特殊授權邏輯的場景來說是一個非常強大的工具。"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"安全性（Security）"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"密碼政策（Password Policies）: 可以設定密碼的複雜度、有效期等。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"會話管理（Session Management）: 查看和管理當前活躍的使用者會話。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"應用安全（Client Security）: 對接入的客戶端進行安全設定和驗證。"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"其他"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"事件監控（Events Monitoring）: 監控和記錄關於認證、授權等的事件。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"擴展性（Extensibility）: 支持自定義插件和腳本，以擴展基礎功能。"}]}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:5.keycloak:4.Keycloak介紹.md","_source":"content","_file":"5.keycloak/4.Keycloak介紹.md","_extension":"md"}]