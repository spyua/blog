[{"_path":"/license/ace","_dir":"license","_draft":false,"_partial":false,"_locale":"","title":"ACE [模擬考題]","description":"","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"ace-模擬考題"},"children":[{"type":"text","value":"ACE ["},{"type":"element","tag":"a","props":{"href":"https://forms.gle/ivisDhMXay987DYDA","rel":["nofollow"]},"children":[{"type":"text","value":"模擬考題"}]},{"type":"text","value":"]"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Every employee of your company has a Google account. Your operational team needs to manage a large number of instances on Compute Engine. Each member of this team needs only administrative access to the servers. Your security team wants to ensure that the deployment of credentials is operationally efficient and must be able to determine who accessed a given instance. What should you do?"}]}]}]}]},{"type":"element","tag":"pre","props":{"code":"  A. Generate a new SSH key pair. Give the private key to each member of your team. Configure the public key in the metadata of each instance.\n  B. Ask each member of the team to generate a new SSH key pair and to send you their public key. Use a configuration management tool to deploy those keys on each instance.\n  C. Ask each member of the team to generate a new SSH key pair and to add the public key to their Google account. Grant the compute.osAdminLogin role to the Google group corresponding to this team.\n  D. Generate a new SSH key pair. Give the private key to each member of your team. Configure the public key as a project- wide public SSH key in your Cloud Platform project and allow project-wide public SSH keys on each instance.\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"  A. Generate a new SSH key pair. Give the private key to each member of your team. Configure the public key in the metadata of each instance.\n  B. Ask each member of the team to generate a new SSH key pair and to send you their public key. Use a configuration management tool to deploy those keys on each instance.\n  C. Ask each member of the team to generate a new SSH key pair and to add the public key to their Google account. Grant the compute.osAdminLogin role to the Google group corresponding to this team.\n  D. Generate a new SSH key pair. Give the private key to each member of your team. Configure the public key as a project- wide public SSH key in your Cloud Platform project and allow project-wide public SSH keys on each instance.\n"}]}]},{"type":"element","tag":"details","props":{},"children":[{"type":"text","value":"\n  "},{"type":"element","tag":"summary","props":{},"children":[{"type":"text","value":"解題"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"答案為C，基本上就是考IAM帳戶管理控制"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"公司每位員工都有Google帳戶，而運營團隊需要管理大量的Compute Engine實例。每位團隊成員都需要對這些虛擬機器有管理權限，但只限於管理權限，不需要其他額外的權限。希望部署這些訪問權限的方式要高效，且之後能追踪到哪位員工訪問了特定的實例。"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"A.生成一個新的SSH密鑰對，將私鑰給團隊的每個成員，並在每個實例的元數據中配置公鑰。這種方法的問題在於所有成員共享相同的私鑰，這不僅安全風險高，而且無法追蹤具體人員的訪問。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"B.要求團隊的每個成員生成一個新的SSH密鑰對並將他們的公鑰發給你。使用配置管理工具在每個實例上部署這些密鑰。這個方法能夠實現每個成員都有自己的密鑰，從而提高安全性並能追蹤到每個人的訪問，但部署公鑰的過程可能會比較繁瑣。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"C.要求團隊的每個成員生成一個新的SSH密鑰對並將公鑰添加到他們的Google帳戶中。給予對應這個團隊的Google群組compute.osAdminLogin角色。這個方法不僅確保了每個成員都有自己的密鑰，還利用了GCP的IAM（Identity and Access Management）功能來管理訪問權限，同時也簡化了密鑰的部署過程。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"D. 生成一個新的SSH密鑰對，將私鑰給團隊的每個成員，在你的Cloud Platform項目中配置公鑰為項目範圍內的公開SSH密鑰，並允許在每個實例上使用項目範圍的公開SSH密鑰。這個選項同樣存在A選項的問題，即共享私鑰並不能追蹤到具體個人。"}]}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"ol","props":{"start":2},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"You need to create a custom VPC with a single subnet. The subnet's range must be as large as possible. Which range should you use?"}]}]}]}]},{"type":"element","tag":"pre","props":{"code":"A. 0.0.0.0/0\nB. 10.0.0.0/8\nC. 172.16.0.0/12\nD. 192.168.0.0/16\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"A. 0.0.0.0/0\nB. 10.0.0.0/8\nC. 172.16.0.0/12\nD. 192.168.0.0/16\n"}]}]},{"type":"element","tag":"details","props":{},"children":[{"type":"text","value":"\n  "},{"type":"element","tag":"summary","props":{},"children":[{"type":"text","value":"解題"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"答案為B，考CIDR（Classless Inter-Domain Routing）"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"詢問如何在Google Cloud Platform（GCP）上創建一個自定義虛擬私有雲（VPC）並設定一個單一子網，使得這個子網的IP範圍盡可能大。"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"A. 0.0.0.0/0 - 這個範圍代表所有可能的IPv4地址，但它不是一個實際可用於子網的範圍，因為它用於特殊目的（例如路由規則中表示任何地址）。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"B. 10.0.0.0/8 - 這個範圍在私有地址空間中是可用的，並且提供了最大的IP地址範圍，大約有16777216個可用地址（2^24）。這是一個廣泛用於大型網絡的範圍。 (/8表示前8位是網絡地址，剩下的24位（32-8=24）是主機地址。所以，可以有224224個可能的地址。)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"C. 172.16.0.0/12 - 這也是私有地址空間的一部分，但提供的地址數量少於10.0.0.0/8範圍，大約有1048576個可用地址（2^20）。(/12表示前12位是網絡地址，剩下的20位（32-12=20）是主機地址。所以，可以有220220個可能的地址。)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"D. 192.168.0.0/16 - 這個範圍同樣屬於私有地址空間，提供的IP地址數量更少，大約有65536個可用地址（2^16）。(/16表示前16位是網絡地址，剩下的16位（32-16=16）是主機地址。所以，可以有216216個可能的地址。)"}]}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"ol","props":{"start":3},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"You want to select and configure a cost-effective solution for relational data on Google Cloud Platform. You are working with a small set of operational data in one geographic location. You need to support point-in-time recovery. What should you do?"}]}]}]}]},{"type":"element","tag":"pre","props":{"code":"A. Select Cloud SQL (MySQL). Verify that the enable binary logging option is selected. \nB. Select Cloud SQL (MySQL). Select the create failover replicas option.\nC. Select Cloud Spanner. Set up your instance with 2 nodes.\nD. Select Cloud Spanner. Set up your instance as multi-regional.\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"A. Select Cloud SQL (MySQL). Verify that the enable binary logging option is selected. \nB. Select Cloud SQL (MySQL). Select the create failover replicas option.\nC. Select Cloud Spanner. Set up your instance with 2 nodes.\nD. Select Cloud Spanner. Set up your instance as multi-regional.\n"}]}]},{"type":"text","value":"\n "},{"type":"element","tag":"details","props":{},"children":[{"type":"text","value":"\n  "},{"type":"element","tag":"summary","props":{},"children":[{"type":"text","value":"解題"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"答案是A，考Cloud SQL 及對 Cloud Spanner 選用上認知"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"這個問題是關於在Google Cloud Platform（GCP）上選擇和配置一個成本效益高的關聯式數據存儲解決方案。考慮的情境是你正在處理一個小型的運營數據集，而且這些數據只需要在一個地理位置存儲。此外，你需要支持點時間恢復（Point-in-Time Recovery, PITR），這意味著你需要能夠恢復到數據庫在過去任何一個特定時間點的狀態。"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"A. 選擇Cloud SQL (MySQL)。確保選擇了啟用二進制日誌記錄選項。"}]}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Cloud SQL是一個完全管理的關聯式數據庫服務，支持MySQL等流行的數據庫系統。啟用二進制日誌記錄是支持點時間恢復的一個要求，因為它可以記錄數據庫的所有更改，從而允許恢復到特定的時間點。"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"B. 選擇Cloud SQL (MySQL)。選擇創建故障轉移副本選項。"}]}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"創建故障轉移副本提高了數據庫的可用性和災難恢復能力，但它不直接與支持點時間恢復的需求相關。"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"C. 選擇Cloud Spanner。設置你的實例為2個節點。"}]}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Cloud Spanner是一個完全管理的、水平可擴展的關聯式數據庫服務，支持全球分佈的數據庫和強一致性。但對於一個小型數據集且只在一個地理位置的需求來說，Cloud Spanner可能是一個過於昂貴的選項，尤其是當只需要點時間恢復這一特定功能時。"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"D. 選擇Cloud Spanner。設置你的實例為多區域。"}]}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"這個選項提供了高可用性和災難恢復能力，但與C選項一樣，對於小型數據集來說，這是一個成本較高的解決方案，並且超出了只需要一個地理位置存儲的需求。"}]}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"ol","props":{"start":4},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"You want to configure autohealing for network load balancing for a group of Compute Engine instances that run in multiple zones, using the fewest possible steps. You need to configure re-creation of VMs if they are unresponsive after 3 attempts of 10 seconds each. What should you do?"}]}]}]}]},{"type":"element","tag":"pre","props":{"code":"A. Create an HTTP load balancer with a backend configuration that references an existing instance group. Set the health check to healthy (HTTP)\nB. Create an HTTP load balancer with a backend configuration that references an existing instance group. Define a balancing mode and set the maximum RPS to 10.\nC. Create a managed instance group. Set the Autohealing health check to healthy (HTTP)\nD. Create a managed instance group. Verify that the autoscaling setting is on.\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"A. Create an HTTP load balancer with a backend configuration that references an existing instance group. Set the health check to healthy (HTTP)\nB. Create an HTTP load balancer with a backend configuration that references an existing instance group. Define a balancing mode and set the maximum RPS to 10.\nC. Create a managed instance group. Set the Autohealing health check to healthy (HTTP)\nD. Create a managed instance group. Verify that the autoscaling setting is on.\n"}]}]},{"type":"text","value":"\n "},{"type":"element","tag":"details","props":{},"children":[{"type":"text","value":"\n  "},{"type":"element","tag":"summary","props":{},"children":[{"type":"text","value":"解題"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"答案是C， ref : "},{"type":"element","tag":"a","props":{"href":"https://cloud.google.com/compute/docs/tutorials/high-availability-autohealing","rel":["nofollow"]},"children":[{"type":"text","value":"https://cloud.google.com/compute/docs/tutorials/high-availability-autohealing"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"這題考的是如何在Google Cloud Platform上為運行在多個區域的Compute Engine實例群組配置網絡負載均衡的自動修復功能，並且要求用盡可能少的步驟完成。自動修復功能能夠檢測到實例因無響應而失效時自動重新創建實例。具體來說，題目要求配置系統在實例經過3次每次10秒的嘗試無響應後進行重新創建。"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"A. 創建一個HTTP負載均衡器，並且配置後端參照一個現有的實例群組。設置健康檢查為健康(HTTP): 這個選項設置了HTTP負載均衡器並使用健康檢查，但是主要聚焦在流量分配而非自動修復。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"B. 創建一個HTTP負載均衡器，並且配置後端參照一個現有的實例群組。定義一個平衡模式並設置最大RPS為10: 這個選項同樣是設置HTTP負載均衡器，聚焦在處理請求的能力上，與自動修復無關。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"C. 創建一個管理的實例群組。設置自動修復健康檢查為健康(HTTP): 這個選項直接指向了自動修復的需求，通過在管理的實例群組中設置健康檢查來達到當實例無響應時自動重新創建的目標。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"D. 創建一個管理的實例群組。驗證自動擴展設置是否開啟: 雖然這個選項涉及到管理的實例群組，但是它聚焦在自動擴展上，與問題中要求的自動修復功能不直接相關。"}]}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"ol","props":{"start":5},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"You are using multiple configurations for gcloud. You want to review the configured Kubernetes Engine cluster of an inactive configuration using the fewest possible steps. What should you do?"}]}]}]}]},{"type":"element","tag":"pre","props":{"code":"A. Use gcloud config configurations describe to review the output.\nB. Use gcloud config configurations activate and gcloud config list to review the output. \nC. Use kubectl config get-contexts to review the output.\nD. Use kubectl config use-context and kubectl config view to review the output.\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"A. Use gcloud config configurations describe to review the output.\nB. Use gcloud config configurations activate and gcloud config list to review the output. \nC. Use kubectl config get-contexts to review the output.\nD. Use kubectl config use-context and kubectl config view to review the output.\n"}]}]},{"type":"text","value":"\n  "},{"type":"element","tag":"details","props":{},"children":[{"type":"text","value":"\n  "},{"type":"element","tag":"summary","props":{},"children":[{"type":"text","value":"解題"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"答案是D，考gcloud config指令在GKE上應用"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"如何在使用Google Cloud SDK（gcloud）的多配置環境中，用最少的步驟審查一個不活躍配置下的Kubernetes Engine集群配置。"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"A. 使用gcloud config configurations describe來審查輸出。 這個命令用於顯示當前或指定配置的詳細信息，但不直接針對Kubernetes Engine集群的配置。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"B. 使用gcloud config configurations activate命令可以切換到一個特定的配置，然後使用gcloud config list可以查看當前激活配置的詳細設置。這個方法直接關聯到gcloud工具和Google Cloud平台的配置，但它更多地是關於查看gcloud CLI的配置，而不直接指向Kubernetes Engine集群的具體配置。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"C. kubectl config get-contexts命令顯示所有可用的上下文。每個上下文代表一個連接到特定Kubernetes集群的設定。這個命令快速顯示了所有配置的上下文，但它不切換到這些上下文或直接審查它們的細節。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"D. kubectl config use-context允許你切換到一個特定的Kubernetes上下文（這個上下文可能是指向一個特定的Kubernetes Engine集群），而kubectl config view能夠讓你查看當前的kubectl配置，包括與所選上下文相關的配置。這對於審查Kubernetes Engine集群的配置來說，是一種更直接的方法。"}]}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"ol","props":{"start":6},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Your company uses Cloud Storage to store application backup files for disaster recovery purposes.\nYou want to follow Google's recommended practices. Which storage option should you use?"}]}]}]}]},{"type":"element","tag":"pre","props":{"code":"A. Multi-Regional Storage\nB. Regional Storage\nC. Nearline Storage\nD. Coldline Storage\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"A. Multi-Regional Storage\nB. Regional Storage\nC. Nearline Storage\nD. Coldline Storage\n"}]}]},{"type":"text","value":"\n "},{"type":"element","tag":"details","props":{},"children":[{"type":"text","value":"\n  "},{"type":"element","tag":"summary","props":{},"children":[{"type":"text","value":"解題"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"答案是D, 考對Storage認知，基本上題目提到備份檔案，代表要存取的資料時長時間不會去異動他的，所以答案選Coldline Storage(D)。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"使用雲端儲存來儲存應用程式的備份檔案，目的是為了災難恢復。並且遵循Google的建議做法。當我們說備份檔案是為了diaster恢復，這意味著這些文件不太可能經常被存取，但在必要時需要能迅速取得。"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"A. 資料會分散儲存在多個區域中，主要適用於那些需要在全球多個地點進行高頻率存取的數據。適用情境: 如果你有一個網站或應用，並希望全球的用戶都能快速存取資料。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"B. 資料僅儲存在特定的區域中。這意味著它比多區域儲存更有地域性，但同時也具有高的存取速度。適用情境: 如果你的應用或服務主要是針對某一特定地理區域的用戶，例如只在亞洲。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"C. 是一種低成本的儲存方式，適用於那些你不經常需要存取，但當需要時，你希望能在數秒內獲取的數據。適用情境: 假設你有一些資料，大概每月需要查看或使用一次。可選擇Nearline Storage"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"D. 用於那些很少存取的資料，但可能在未來需要它們。成本非常低，但取得資料時可能需要較長的時間。適用情境: 如果你有需要長期保存但很少存取的資料，例如備份或檔案存檔，那麼冷儲存是個好選擇。"}]}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"ol","props":{"start":7},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Several employees at your company have been creating projects with Cloud Platform and paying for it with their personal credit cards, which the company reimburses. The company wants to centralize all these projects under a single, new billing account. What should you do?"}]}]}]}]},{"type":"element","tag":"pre","props":{"code":"A. Contact cloud-billing@google.com with your bank account details and request a corporate billing account for your company.\nB. Create a ticket with Google Support and wait for their call to share your credit card details over the phone.\nC. In the Google Platform Console, go to the Resource Manage and move all projects to the root Organizarion.\nD. In the Google Cloud Platform Console, create a new billing account and set up a payment method.\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"A. Contact cloud-billing@google.com with your bank account details and request a corporate billing account for your company.\nB. Create a ticket with Google Support and wait for their call to share your credit card details over the phone.\nC. In the Google Platform Console, go to the Resource Manage and move all projects to the root Organizarion.\nD. In the Google Cloud Platform Console, create a new billing account and set up a payment method.\n"}]}]},{"type":"text","value":"\n  "},{"type":"element","tag":"details","props":{},"children":[{"type":"text","value":"\n  "},{"type":"element","tag":"summary","props":{},"children":[{"type":"text","value":"解題"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"答案為D"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"探討的是如何將一個公司內多個員工為了工作目的而分別使用個人信用卡支付的Google雲端平台（GCP）項目，統一到一個公司的計費帳戶下。這樣做的目的是為了讓公司能夠更有效地管理雲端資源的費用和項目，避免個別員工需要先行支付然後再報銷的不便和風險。"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"A. 聯絡Google的計費部門的電子郵件地址，並提供你的銀行帳戶詳細資訊，請求為公司建立一個企業計費帳戶。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"B. 通過創建支持票務並等待通話來分享信用卡詳細資訊。這個選項在處理計費問題時通常不是推薦的做法，因為涉及到信用卡資訊的共享應該通過安全的方法進行。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"C. 在Google雲端平台控制台中，前往資源管理器並將所有項目移至根組織。這個選項解決了項目組織的問題，但並未直接解決計費帳戶的統一問題。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"D. 在Google雲端平台控制台中創建一個新的計費帳戶並設置支付方式。這是解決問題的直接方法，允許公司設置一個中央計費帳戶並將所有現有和未來的項目關聯到這個帳戶。這樣，公司可以直接管理所有雲端資源的費用，而不需要員工個別支付並求報銷。"}]}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"ol","props":{"start":8},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"You have an application that looks for its licensing server on the IP 10.0.3.21. You need to deploy the licensing server on Compute Engine. You do not want to change the configuration of the application and want the application to be able to reach the licensing server. What should you do?"}]}]}]}]},{"type":"element","tag":"pre","props":{"code":"A. Reserve the IP 10.0.3.21 as a static internal IP address using gcloud and assign it to the licensing server.\nB. Reserve the IP 10.0.3.21 as a static public IP address using gcloud and assign it to the licensing server.\nC. Use the IP 10.0.3.21 as a custom ephemeral IP address and assign it to the licensing server.\nD. Start the licensing server with an automatic ephemeral IP address, and then promote it to a static internal IP address\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"A. Reserve the IP 10.0.3.21 as a static internal IP address using gcloud and assign it to the licensing server.\nB. Reserve the IP 10.0.3.21 as a static public IP address using gcloud and assign it to the licensing server.\nC. Use the IP 10.0.3.21 as a custom ephemeral IP address and assign it to the licensing server.\nD. Start the licensing server with an automatic ephemeral IP address, and then promote it to a static internal IP address\n"}]}]},{"type":"text","value":"\n  "},{"type":"element","tag":"details","props":{},"children":[{"type":"text","value":"\n  "},{"type":"element","tag":"summary","props":{},"children":[{"type":"text","value":"解題"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"答案為A"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"有一個應用程式，該應用程式依賴於一個具有固定IP地址（10.0.3.21）的伺服器。你需要在Google Compute Engine上部署這個伺服器，而且不希望更改應用程式的配置。你應該怎麼做才能讓應用程式能夠正確地連接到這個伺服器？"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"A. 此選項建議使用gcloud命令行工具預先保留10.0.3.21作為靜態內部IP地址，並將其分配給認證伺服器。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"B. 此選項建議使用gcloud工具將10.0.3.21保留為靜態公共IP地址。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"C. 使用10.0.3.21作為臨時（ephemeral）IP地址"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"D. 建議首先使用自動分配的臨時IP啟動認證伺服器，然後再將其提升（或更改）為靜態內部IP地址。"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"上述四個選項以A的設定，就算VM重啟，IP地址也會保持不變。其餘三個，B實作上不建議使用公用IP，C的話臨時IP會在虛擬機重啟或停止會更動，最後D在VM啟動後，還需要進行額外的步驟更改IP地址。選項A是最好的解決方案，因為它確保了即使虛擬機器重啟，IP地址也會保持不變。而且它使用的是內部IP，適合於內部應用程式和伺服器之間的通信。"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"ol","props":{"start":9},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"You are deploying an application to App Engine. You want the number of instances to scale based on request rate. You need at least 3 unoccupied instances at all times. Which scaling type should you use?"}]}]}]}]},{"type":"element","tag":"pre","props":{"code":"A. Manual Scaling with 3 instances.\nB. Basic Scaling with min_instances set to 3.\nC. Basic Scaling with max_instances set to 3\nD. Automatic Scaling with min_idle_instances set to 3.\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"A. Manual Scaling with 3 instances.\nB. Basic Scaling with min_instances set to 3.\nC. Basic Scaling with max_instances set to 3\nD. Automatic Scaling with min_idle_instances set to 3.\n"}]}]},{"type":"text","value":"\n  "},{"type":"element","tag":"details","props":{},"children":[{"type":"text","value":"\n  "},{"type":"element","tag":"summary","props":{},"children":[{"type":"text","value":"解題"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"D、ref:"},{"type":"element","tag":"a","props":{"href":"https://cloud.google.com/appengine/docs/legacy/standard/python/how-instances-are-managed","rel":["nofollow"]},"children":[{"type":"text","value":"https://cloud.google.com/appengine/docs/legacy/standard/python/how-instances-are-managed"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"題目希望您選擇一個scale策略，使應用程式的Instance可以基於請求速率自動調整，而且任何時候都至少有3個未被使用的實例。"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"A. 手動設定要運行的實例數量，不考慮當前的請求量。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"B. 基本Scale基於請求速率和其他指標進行伸縮，但它也允許您設定最小實例數量。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"C. 設定最多只能有3個實例運行，這不符合題目要求始終有3個“未被使用”的實例。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"D. 自動伸縮允許實例數量根據實際的請求負載動態調整。"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"答案D，這題很明顯D為Automatic Scaling，字面上意思就是確保了有3個始終未被使用的實例，並且會根據請求速率自動調整其他實例數量。稍微提一下min_instances與min_idle_instances不一樣。min_instances只保證至少有3個實例運行，不管它們是否處於空閒狀態。min_idle_instances確保有3個實例始終處於空閒狀態，所以隨時可以開始處理新的請求。"}]},{"type":"element","tag":"pre","props":{"code":"補充：\nAn instance of an auto-scaled service is always running. \nHowever, an instance of a manual or basic scaled service can be either running or stopped. \nAll instances of the same service and version share the same state.\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"補充：\nAn instance of an auto-scaled service is always running. \nHowever, an instance of a manual or basic scaled service can be either running or stopped. \nAll instances of the same service and version share the same state.\n"}]}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"ol","props":{"start":10},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"You have a development project with appropriate IAM roles defined. You are creating a production project and want to have the same IAM roles on the new project, using the fewest possible steps. What should you do?"}]}]}]}]},{"type":"element","tag":"pre","props":{"code":"A. Use gcloud iam roles copy and specify the production project as the destination project.\nB. Use gcloud iam roles copy and specify your organization as the destination organization.\nC. In the Google Cloud Platform Console, use the 'create role from role' functionality.\nD. In the Google Cloud Platform Console, use the 'create role' functionality and select all applicable permissions\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"A. Use gcloud iam roles copy and specify the production project as the destination project.\nB. Use gcloud iam roles copy and specify your organization as the destination organization.\nC. In the Google Cloud Platform Console, use the 'create role from role' functionality.\nD. In the Google Cloud Platform Console, use the 'create role' functionality and select all applicable permissions\n"}]}]},{"type":"text","value":"\n  "},{"type":"element","tag":"details","props":{},"children":[{"type":"text","value":"\n  "},{"type":"element","tag":"summary","props":{},"children":[{"type":"text","value":"解題"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"如何最有效地在新的專案中複製或遷移既有的IAM角色設定。"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"A. 使用gcloud iam roles copy並指定生產專案作為目標專案。 這個選項建議使用gcloud命令行工具來直接複製一個角色到另一個專案。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"B. 使用gcloud iam roles copy並指定你的組織作為目標組織。 這個選項也是使用gcloud命令行工具，但是建議將角色複製到整個組織範圍，這樣所有專案都能夠繼承這個角色。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"C. 在Google Cloud Platform Console中，使用'create role from role'功能。 這個選項建議在GCP控制台中使用一個具體功能來從一個現有角色創建一個新角色。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"D. 在Google Cloud Platform Console中，使用'create role'功能並選擇所有適用的權限。 這個選項建議手動在GCP控制台中創建一個新角色，並從頭開始選擇所需的權限。"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"答案是A，C沒有這個指令"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"ol","props":{"start":11},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"You need a dynamic way of provisioning VMs on Compute Engine. The exact specifications will be in a dedicated configuration file. You want to follow Google's recommended practices. Which method should you use?"}]}]}]}]},{"type":"element","tag":"pre","props":{"code":"A. Deployment Manager\nB. Cloud Composer\nC. Managed Instance Group\nD. Unmanaged Instance Group\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"A. Deployment Manager\nB. Cloud Composer\nC. Managed Instance Group\nD. Unmanaged Instance Group\n"}]}]},{"type":"text","value":"\n "},{"type":"element","tag":"details","props":{},"children":[{"type":"text","value":"\n  "},{"type":"element","tag":"summary","props":{},"children":[{"type":"text","value":"解題"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"這個問題是關於在Google Cloud Platform（GCP）上動態配置和管理虛擬機（VMs）的最佳方法。特別是，它詢問如何根據一個專門的配置文件準確地配置VMs，同時遵循Google推薦的實踐。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A. Deployment Manager 已經於2022年終止服務，官方建議使用KRM 或 Terraform。原使用方法應為配置Yaml使其可以自動建置與增加VM。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"B. Cloud Composer基於 Apache Airflow，是一個完全管理的工作流程自動化工具，用於建立、計畫、監控和管理工作流程。比較像在自動化建立GCP相關服務並整合"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"C. Managed Instance Group (MIG) (Migrate to Virtual Machines) 支持負載均衡、自動擴展和滾動更新，確保指定數量的實例始終是健康的和運行的。例如，如果MIG中的一個實例失效，MIG會自動替換該實例，以維持所需的實例數量。MIG還可以基於CPU使用率或其他指標動態調整實例的數量。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"D. Unmanaged Instance Group 允許您組織一組單獨的實例，但不自動管理實例的生命週期。"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"ol","props":{"start":12},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"You have a Dockerfile that you need to deploy on Kubernetes Engine. What should you do?"}]}]}]}]},{"type":"element","tag":"pre","props":{"code":"A. Use kubectl app deploy <dockerfilename>.\nB. Use gcloud app deploy <dockerfilename>.\nC. Create a docker image from the Dockerfile and upload it to Container Registry. \n   Create a Deployment YAML file to point to that image. Use kubectl to create the deployment with that file.\nD. Create a docker image from the Dockerfile and upload it to Cloud Storage. \n   Create a Deployment YAML file to point to that image. Use kubectl to create the deployment with that file.\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"A. Use kubectl app deploy <dockerfilename>.\nB. Use gcloud app deploy <dockerfilename>.\nC. Create a docker image from the Dockerfile and upload it to Container Registry. \n   Create a Deployment YAML file to point to that image. Use kubectl to create the deployment with that file.\nD. Create a docker image from the Dockerfile and upload it to Cloud Storage. \n   Create a Deployment YAML file to point to that image. Use kubectl to create the deployment with that file.\n"}]}]},{"type":"text","value":"\n "},{"type":"element","tag":"details","props":{},"children":[{"type":"text","value":"\n  "},{"type":"element","tag":"summary","props":{},"children":[{"type":"text","value":"解題"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"C,"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"這個問題是關於如何在Google Kubernetes Engine (GKE) 上部署一個Docker容器。具體來說，它詢問當你有一個Dockerfile時，應該怎麼做才能將它部署到Kubernetes集群中。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A. 使用kubectl app deploy "},{"type":"element","tag":"dockerfilename","props":{},"children":[{"type":"text","value":"。 這個命令格式並不正確，kubectl沒有app deploy這個指令。"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"B. 使用gcloud app deploy "},{"type":"element","tag":"dockerfilename","props":{},"children":[{"type":"text","value":"。 這是Google Cloud Platform上的App Engine應用部署命令，用於部署App Engine應用，而不是用於Kubernetes Engine上部署Docker容器。"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"C. 從Dockerfile創建一個docker映像並將其上傳到Container Registry。創建一個指向該映像的Deployment YAML文件。使用kubectl來用該文件創建部署。 這是一個典型的流程，用於在Kubernetes上部署容器化應用。首先，你需要從Dockerfile構建一個Docker映像，然後將該映像推送到一個容器映像庫（在這裡是Google Container Registry）。接著，你需要創建一個Deployment的YAML配置文件，指定如何運行你的容器映像，最後使用kubectl命令來根據YAML文件創建部署。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"D.  從Dockerfile創建一個docker映像並將其上傳到Cloud Storage。創建一個指向該映像的Deployment YAML文件。使用kubectl來用該文件創建部署。 這個選項建議將映像上傳到Google Cloud Storage，但這不是容器映像的標準存儲方式。通常，容器映像應該被推送到一個容器註冊中心，如Google Container Registry或Docker Hub。"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"ol","props":{"start":13},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Your development team needs a new Jenkins server for their project. You need to deploy the server using the fewest steps possible. What should you do?"}]}]}]}]},{"type":"element","tag":"pre","props":{"code":"A. Download and deploy the Jenkins Java WAR to App Engine Standard.\nB. Create a new Compute Engine instance and install Jenkins through the command line interface.\nC. Create a Kubernetes cluster on Compute Engine and create a deployment with the Jenkins Docker image.\nD. Use GCP Marketplace to launch the Jenkins solution.\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"A. Download and deploy the Jenkins Java WAR to App Engine Standard.\nB. Create a new Compute Engine instance and install Jenkins through the command line interface.\nC. Create a Kubernetes cluster on Compute Engine and create a deployment with the Jenkins Docker image.\nD. Use GCP Marketplace to launch the Jenkins solution.\n"}]}]},{"type":"text","value":"\n "},{"type":"element","tag":"details","props":{},"children":[{"type":"text","value":"\n  "},{"type":"element","tag":"summary","props":{},"children":[{"type":"text","value":"解題"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"D"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"您的開發團隊需要一個新的Jenkins伺服器用於他們的專案。您需要使用最少的步驟來部署伺服器。您應該怎麼做？"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A. 下載並部署Jenkins Java WAR到App Engine Standard。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"B. 創建一個新的Compute Engine實例並通過命令行介面安裝Jenkins。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"C. 在Compute Engine上創建一個Kubernetes集群，並使用Jenkins Docker映像創建一個部署。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"D. 使用GCP Marketplace啟動Jenkins解決方案。"}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://cloud.google.com/solutions/using-jenkins-for-distributed-builds-on-compute-engine","rel":["nofollow"]},"children":[{"type":"text","value":"https://cloud.google.com/solutions/using-jenkins-for-distributed-builds-on-compute-engine"}]}]}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"ol","props":{"start":14},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"You need to update a deployment in Deployment Manager without any resource downtime in the deployment. Which command should you use?"}]}]}]}]},{"type":"element","tag":"pre","props":{"code":"A. gcloud deployment-manager deployments create --config <deployment-config-path>\nB. gcloud deployment-manager deployments update --config <deployment-config-path>\nC. gcloud deployment-manager resources create --config <deployment-config-path>\nD. gcloud deployment-manager resources update --config <deployment-config-path>\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"A. gcloud deployment-manager deployments create --config <deployment-config-path>\nB. gcloud deployment-manager deployments update --config <deployment-config-path>\nC. gcloud deployment-manager resources create --config <deployment-config-path>\nD. gcloud deployment-manager resources update --config <deployment-config-path>\n"}]}]},{"type":"text","value":"\n  "},{"type":"element","tag":"details","props":{},"children":[{"type":"text","value":"\n  "},{"type":"element","tag":"summary","props":{},"children":[{"type":"text","value":"解題"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"B"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"如何使用Google Cloud Deployment Manager來更新一個現有部署，同時確保更新過程中不會導致任何資源的停機。Deployment Manager是一個基於資源的配置管理系統，允許你使用模板來自動創建、更新和管理Google Cloud資源。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A: 這個命令用於創建一個新的部署，並不適用於更新現有部署"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"B: 這個命令用於更新一個現有的部署。如果你的目標是在不停機的情況下更新部署，這是正確的選擇。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"C: 這個命令用於創建新資源，而不是更新現有部署。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"D: 這個選項不是一個實際存在的命令。在Deployment Manager中，資源的更新是通過更新部署來實現的，而不是直接對資源進行更新。"}]},{"type":"text","value":"\n "}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"ol","props":{"start":15},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"You need to run an important query in BigQuery but expect it to return a lot of records. You want to find out how much it will cost to run the query. You are using on-demand pricing. What should you do?"}]}]}]}]},{"type":"element","tag":"pre","props":{"code":"A. Arrange to switch to Flat-Rate pricing for this query, then move back to on-demand.\n\nB. Use the command line to run a dry run query to estimate the number of bytes read. Then convert that bytes estimate to dollars using the Pricing Calculator.\n\nC. Use the command line to run a dry run query to estimate the number of bytes returned. Then convert that bytes estimate to dollars using the Pricing Calculator.\n\nD. Run a select count (*) to get an idea of how many records your query will look through. Then convert that number of rows to dollars using the Pricing Calculator.\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"A. Arrange to switch to Flat-Rate pricing for this query, then move back to on-demand.\n\nB. Use the command line to run a dry run query to estimate the number of bytes read. Then convert that bytes estimate to dollars using the Pricing Calculator.\n\nC. Use the command line to run a dry run query to estimate the number of bytes returned. Then convert that bytes estimate to dollars using the Pricing Calculator.\n\nD. Run a select count (*) to get an idea of how many records your query will look through. Then convert that number of rows to dollars using the Pricing Calculator.\n"}]}]},{"type":"text","value":"\n "},{"type":"element","tag":"details","props":{},"children":[{"type":"text","value":"\n  "},{"type":"element","tag":"summary","props":{},"children":[{"type":"text","value":"解題"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"B"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"這個問題是關於如何在使用Google Cloud BigQuery時，事先估算出一個查詢操作的成本。BigQuery是Google Cloud提供的一個大數據分析平台，它允許用戶存儲和查詢大量數據。BigQuery提供兩種計費模式：按需定價（on-demand pricing）和固定費率定價（flat-rate pricing）。按需定價根據查詢處理的數據量計費，而固定費率定價則允許用戶為一定的查詢容量支付固定費用。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A. 安排在這次查詢時切換到固定費率定價，然後再切回按需定價。 這個選項在技術上可行，但對於一次查詢來說過於繁瑣，且並非成本估算的直接方法。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"B. 使用命令行運行一次試運行（dry run）查詢來估算讀取的字節數。然後使用定價計算器將這個字節估算轉換成美元。 這是一個有效的方法，因為BigQuery的按需定價是根據查詢分析的數據量來計費的，而不是基於返回的記錄數。這允許用戶在實際運行查詢前獲得成本估算。簡單來說按需定價可以做一個模擬估算的意思。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"C. 使用命令行運行一次試運行查詢來估算返回的字節數。然後使用定價計算器將這個字節估算轉換成美元。 這個選項似乎有誤，因為BigQuery的費用是根據查詢過程中掃描的數據量來計算的，而不是基於查詢結果返回的數據量。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"D. 運行一個select count (*)查詢來獲得你的查詢將查看多少記錄。然後使用定價計算器將這個行數轉換成美元。 這個方法不適用於估算成本，因為它並不考慮查詢實際上會掃描多少數據。BigQuery的費用計算基於查詢的數據量，而不是結果集的大小。"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"ol","props":{"start":16},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"You have a single binary application that you want to run on Google Cloud Platform. You decided to automatically scale the application based on underlying infrastructure CPU usage. Your organizational policies require you to use virtual machines directly. You need to ensure that the application scaling is operationally efficient and completed as quickly as possible. What should you do?"}]}]}]}]},{"type":"element","tag":"pre","props":{"code":"A. Create a Google Kubernetes Engine cluster, and use horizontal pod autoscaling to scale the application.\nB. Create an instance template, and use the template in a managed instance group with autoscaling configured.\nC. Create an instance template, and use the template in a managed instance group that scales up and down based on the time of day.\nD. Use a set of third-party tools to build automation around scaling the application up and down, based on Stackdriver CPU usage monitoring.\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"A. Create a Google Kubernetes Engine cluster, and use horizontal pod autoscaling to scale the application.\nB. Create an instance template, and use the template in a managed instance group with autoscaling configured.\nC. Create an instance template, and use the template in a managed instance group that scales up and down based on the time of day.\nD. Use a set of third-party tools to build automation around scaling the application up and down, based on Stackdriver CPU usage monitoring.\n"}]}]},{"type":"text","value":"\n "},{"type":"element","tag":"details","props":{},"children":[{"type":"text","value":"\n  "},{"type":"element","tag":"summary","props":{},"children":[{"type":"text","value":"解題"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"B"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"這題在問的是，當你有一個單一的二進制應用程式，並希望在Google Cloud Platform（GCP）上運行這個應用程式時，如何根據底層基礎設施的CPU使用率自動調整應用程式的規模，同時要求操作效率高且迅速完成，而且還要遵循組織政策直接使用虛擬機（VM）。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A. 建立一個 GKE，使用橫向自動擴展設定應用 (題目要求用VM)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"B. 建立一個 instance template ，並在 managed instance group 搭配 autoscaling configured 使用該template"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"C. 建立一個 instance template ，並在 managed instance group 中使用該模板，該 instance group 根據時間進行縮放"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"D. 使用第三方工具，基於 Stackdriver CPU 監看自動擴縮應用程式"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"最適合的選項是B：創建一個實例模板，並在一個配置了自動擴展的管理實例群組中使用該模板。這樣可以直接在虛擬機上運行應用程式，並根據CPU使用率自動調整應用程式的規模，符合操作效率高且快速完成的要求。選項C和D提供了基於時間或使用第三方工具的解決方案，這可能不如直接使用GCP內建的功能那樣操作高效且快速。"}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Instance template（實例模板）是一種Google Cloud Platform（GCP）的資源，用於定義虛擬機實例的配置。當你需要創建許多具有相同配置的虛擬機時，實例模板可以幫助你實現快速且一致的部署。"}]}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"ol","props":{"start":17},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"You are analyzing Google Cloud Platform service costs from three separate projects. You want to use this information to create service cost estimates by service type, daily and monthly, for the next six months using standard query syntax. What should you do?"}]}]}]}]},{"type":"element","tag":"pre","props":{"code":"A. Export your bill to a Cloud Storage bucket, and then import into Cloud Bigtable for analysis.\nB. Export your bill to a Cloud Storage bucket, and then import into Google Sheets for analysis.\nC. Export your transactions to a local file, and perform analysis with a desktop tool.\nD. Export your bill to a BigQuery dataset, and then write time window-based SQL queries for analysis.\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"A. Export your bill to a Cloud Storage bucket, and then import into Cloud Bigtable for analysis.\nB. Export your bill to a Cloud Storage bucket, and then import into Google Sheets for analysis.\nC. Export your transactions to a local file, and perform analysis with a desktop tool.\nD. Export your bill to a BigQuery dataset, and then write time window-based SQL queries for analysis.\n"}]}]},{"type":"text","value":"\n  "},{"type":"element","tag":"details","props":{},"children":[{"type":"text","value":"\n  "},{"type":"element","tag":"summary","props":{},"children":[{"type":"text","value":"解題"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"D"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"這道題目是關於如何使用Google Cloud Platform（GCP）上的工具來分析三個不同項目的服務成本，並基於這些資料來預估未來六個月每種服務類型的日常和月度成本。選項中提供了不同的方法來達成這個目標，問題在於找出最合適的方式。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A. 將你的賬單導出到Cloud Storage桶，然後導入到Cloud Bigtable進行分析。 Cloud Bigtable是一個高效能的NoSQL數據庫服務，適用於大規模數據分析，但它可能不是分析賬單數據最直觀或成本效益最高的選擇。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"B. 將你的賬單導出到Cloud Storage桶，然後導入到Google Sheets進行分析。 Google Sheets是一個雲端試算表應用，適合進行較小規模的數據分析和預算規劃，但可能不適合處理大量資料或進行複雜的時間窗口基礎的SQL查詢。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"C. 將你的交易記錄導出到本地文件，並使用桌面工具進行分析。 這是一個選項，但它可能不利於自動化或規模化分析，且無法充分利用GCP提供的強大數據處理能力。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"D. 將你的賬單導出到一個BigQuery數據集，然後撰寫基於時間窗口的SQL查詢進行分析。 BigQuery是一個企業級的數據倉庫服務，支持快速SQL查詢，非常適合進行大規模數據分析。通過將賬單數據導入BigQuery，你可以利用其強大的分析能力來執行複雜的查詢，如基於時間窗口的成本預估。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"選項D是最佳選擇，因為它允許你利用BigQuery的強大查詢能力來分析賬單數據，並預測未來幾個月的服務成本。這種方法支持標準查詢語法，適合進行複雜的時間序列分析，且能夠處理大量數據，非常適合於成本估算的需求。"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:101.license:1.ACE.md","_source":"content","_file":"101.license/1.ACE.md","_extension":"md"},{"_path":"/desktop/windowsformxxxx","_dir":"desktop","_draft":false,"_partial":false,"_locale":"","title":"WindowsForm找不到類型xxxx上的建構涵式","description":"","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"windowsform找不到類型xxxx上的建構涵式"},"children":[{"type":"text","value":"WindowsForm找不到類型xxxx上的建構涵式"}]},{"type":"element","tag":"h2","props":{"id":"情境"},"children":[{"type":"text","value":"情境"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"近期在設計DeskTop頁面時有遇到幾個頁面基底邏輯相同的狀況，於是特別設置Base Page去讓UC繼承使用。因為頁面其實長差不多，所以最後決定不使用參考引用而直接使用繼承。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"讓A(UC_3Dswitch_CalibrationFileManagement)繼承B(UC_3Dswitch_FileManagementBase)。"}]},{"type":"element","tag":"h2","props":{"id":"錯誤訊息"},"children":[{"type":"text","value":"錯誤訊息"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"編譯上都沒有問題，但此時再使用Design模式時，發生找不到類型錯誤如下"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"Error Message","src":"/blog/images/02/01/001.png"},"children":[]}]},{"type":"element","tag":"h2","props":{"id":"解決方法"},"children":[{"type":"text","value":"解決方法"}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"宣告無注入空的建構子，"}]}]}]},{"type":"element","tag":"pre","props":{"className":"language-csharp github-light_github-dark","code":"\n// 宣告無注入空的建構子\npublic UC_3Dswitch_FileManagementBase()\n{\n\n}\npublic UC_3Dswitch_FileManagementBase(AppSetting appSetting) \n{\n    ProductLineDataPath = appSetting.ProductLineDataPath;\n    SNFolderNameLength = appSetting.SNFolderNameLength;\n    InitializeComponent();\n}\n","language":"csharp","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{},"children":[]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{"class":"ct-086898"},"children":[{"type":"text","value":"// 宣告無注入空的建構子\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"public"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-762058"},"children":[{"type":"text","value":"UC_3Dswitch_FileManagementBase"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"()\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":4},"children":[{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"{\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":5},"children":[{"type":"element","tag":"span","props":{},"children":[]}]},{"type":"element","tag":"span","props":{"class":"line","line":6},"children":[{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"}\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":7},"children":[{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"public"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-762058"},"children":[{"type":"text","value":"UC_3Dswitch_FileManagementBase"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-762058"},"children":[{"type":"text","value":"AppSetting"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-762058"},"children":[{"type":"text","value":"appSetting"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":") \n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":8},"children":[{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"{\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":9},"children":[{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"    ProductLineDataPath "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" appSetting.ProductLineDataPath;\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":10},"children":[{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"    SNFolderNameLength "}]},{"type":"element","tag":"span","props":{"class":"ct-149352"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":" appSetting.SNFolderNameLength;\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":11},"children":[{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"    "}]},{"type":"element","tag":"span","props":{"class":"ct-762058"},"children":[{"type":"text","value":"InitializeComponent"}]},{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"();\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":12},"children":[{"type":"element","tag":"span","props":{"class":"ct-553616"},"children":[{"type":"text","value":"}"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"因原先Base設定注入所宣告AppSetting物件，故發生上述無法載入錯誤。看起來Deisnger模式在Control物件使用上Defaul都是預設空的建構子設置。"}]},{"type":"element","tag":"style","props":{},"children":[{"type":"text","value":".github-light_github-dark{color:#24292e;background:#fff;}.dark .github-light_github-dark{color:#e1e4e8;background:#24292e;}.ct-086898{color:#6A737D;}.ct-149352{color:#D73A49;}.dark .ct-149352{color:#F97583;}.ct-553616{color:#24292E;}.dark .ct-553616{color:#E1E4E8;}.ct-762058{color:#6F42C1;}.dark .ct-762058{color:#B392F0;}"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"情境","depth":2,"text":"情境"},{"id":"錯誤訊息","depth":2,"text":"錯誤訊息"},{"id":"解決方法","depth":2,"text":"解決方法"}]}},"_type":"markdown","_id":"content:2.desktop:1.WindowsForm找不到類型xxxx上的建構涵式.md","_source":"content","_file":"2.desktop/1.WindowsForm找不到類型xxxx上的建構涵式.md","_extension":"md"}]