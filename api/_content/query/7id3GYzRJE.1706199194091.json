[{"_path":"/code/refcotr","_dir":"code","_draft":false,"_partial":false,"_locale":"","title":"重構筆記","description":"","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"重構筆記"},"children":[{"type":"text","value":"重構筆記"}]},{"type":"element","tag":"h2","props":{"id":"_20191113"},"children":[{"type":"text","value":"2019/11/13"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Lazy Class"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"別開創無所謂的Class(Ex 指宣告一個變數, Inline Class),邏輯資料相同可以使用繼承延伸,Super Class。要設計Class仙藥思考它的合理性。"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Speculative Generality"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"在設計時，預留太多未來可能會用的擴充點。彈性使用Template模式，然後寫成介面，ConcreateClass去設計跟Imp。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"遇到不能關閉的程式，要考慮好資源回收與OOM問題。\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"1.Collapse Hierachy"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"2.Inline Class"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"3.Remove Parameter"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"4.Remove Method"}]}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Temporay Field"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Class欄位過多，在替代變數命名尚不清楚會讓開發者混淆，這是在開發過程中在需求還不清楚會常遇到，盡量避免這種狀況發生。"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Message Chains(過度耦合訊息練)"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Fun串Fun太多得意思....使用垂直折疊、提取或是使用委託與封裝，使用注入。"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Middle Man(中間轉手人)"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Class放與這個Class不相干的內容，邏輯提煉出來其他模組，或使用把功能寫成父類別繼承，或用注入盡量避免這件事情"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Inappropriate Intimacy(互相依賴)"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"過度互相依賴，或是沒邏輯性的互相依賴(亂使用繼承)。 讀卡機讀取票卡例子(讀卡機，票卡自己也需判斷黑名單)。\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"1.可以定義一個卡片Interface(鎖卡，解卡，判斷)。此Interface讓讀卡機繼承，讓讀卡機注入...(依賴注入,RW定義一個介面，再去實作)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"2.使用委託註冊介面. Call Back方式把有註冊過的方式拉進Class做處理。"}]}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Alternative Class with different Interface(異曲同工的類別)"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"做Extract SuperClass"}]},{"type":"element","tag":"li","props":{},"children":[]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Incomplete Libary Class(不完美程式庫類別)"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"如果要改一點類別庫直接修改，大改套模式..EX:套裝飾者模式,或使用繼承~~~ New程式碼直接延接"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Data Class(純稚資料類別)"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"如果你有資料結構Class專門存取，很多Class會使用他，建議寫Get Set(c#直接產生)。"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Refuesed Bequest(被拒絕的遺贈)"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"繼承錯誤."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Comments(過多的註釋)"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"包Package或好的命名可以避免"}]}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"_20191113","depth":2,"text":"2019/11/13"}]}},"_type":"markdown","_id":"content:0.code:1.Refcotr閱讀.md","_source":"content","_file":"0.code/1.Refcotr閱讀.md","_extension":"md"},{"_path":"/code/_dir","_dir":"code","_draft":false,"_partial":true,"_locale":"","title":"Codesnese","icon":"🧑‍💻","_id":"content:0.code:_dir.yml","_type":"yaml","_source":"content","_file":"0.code/_dir.yml","_extension":"yml"}]